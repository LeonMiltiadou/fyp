{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// This import is only included in the server build, because it's only used by getServerSideProps\nimport { Component } from 'react';\nimport auth0 from '../lib/auth0';\nimport axios from 'axios';\nimport { AppContext } from '../context/state.js';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Table from 'react-bootstrap/Table';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      showAccountDetails: false,\n      showOrders: true,\n      underlineOrders: \"underline\",\n      underlineAccountDetails: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    let user = await this.context.getUser(this.props.user.sub);\n    const orders = await listOrdersForCustomer(user.data.app_metadata.commerceID);\n    this.setState({\n      orders: orders.data\n    });\n  }\n\n  renderAccountDetails() {\n    this.setState({\n      showAccountDetails: true,\n      showOrders: false,\n      underlineAccountDetails: \"underline\",\n      underlineOrders: \"\"\n    });\n  }\n\n  renderOrders() {\n    this.setState({\n      showAccountDetails: false,\n      showOrders: true,\n      underlineAccountDetails: \"\",\n      underlineOrders: \"underline\"\n    });\n  }\n\n  render() {\n    let {\n      user\n    } = this.props;\n    let {\n      orders,\n      showAccountDetails,\n      showOrders,\n      underlineOrders,\n      underlineAccountDetails\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"myaccount-page\"\n    }, __jsx(\"div\", {\n      className: \"myaccount-nav-title\"\n    }, \"My Account\"), __jsx(\"div\", {\n      className: \"myaccount-nav\"\n    }, __jsx(Navbar, {\n      variant: \"dark\",\n      className: \"navbar-myaccount\"\n    }, __jsx(Nav, {\n      className: \"flex-column mr-5\"\n    }, __jsx(Nav.Link, {\n      onSelect: () => this.renderOrders(),\n      href: \"#\"\n    }, __jsx(\"h\", {\n      className: underlineOrders\n    }, \"Orders\")), __jsx(Nav.Link, {\n      onSelect: () => this.renderAccountDetails(),\n      href: \"#\"\n    }, __jsx(\"h\", {\n      className: underlineAccountDetails\n    }, \"Account Details\")), __jsx(Nav.Link, {\n      href: \"/api/auth/logout\"\n    }, \"Logout\")))), __jsx(\"div\", {\n      className: \"account-details\"\n    }, showAccountDetails && __jsx(\"div\", null, __jsx(\"h3\", null, \"Profile (server rendered)\"), __jsx(\"img\", {\n      src: user.picture,\n      alt: \"user picture\"\n    }), __jsx(\"p\", null, \"nickname: \", user.nickname), __jsx(\"p\", null, \"name: \", user.name)), showOrders && __jsx(Table, {\n      borderless: true,\n      striped: true,\n      className: \"order-table\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", {\n      className: \"order-table-heading\"\n    }, __jsx(\"th\", {\n      scope: \"col\"\n    }, \"ID Number\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Order\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Total Price\"), __jsx(\"th\", {\n      scope: \"col\"\n    }, \"Status\"))), __jsx(\"tbody\", null, orders.reverse().map(order => __jsx(\"tr\", null, __jsx(\"th\", {\n      scope: \"row\"\n    }, order.customer_reference), __jsx(\"td\", null, order.order.line_items.map(item => __jsx(\"div\", null, item.quantity, \" x \", item.product_name))), __jsx(\"td\", null, order.order_value.formatted_with_symbol), __jsx(\"td\", null, order.status_fulfillment)))))));\n  }\n\n}\n\n_defineProperty(Profile, \"contextType\", AppContext);\n\nasync function listOrdersForCustomer(customerID) {\n  try {\n    const ordermanagementAPI = axios.create({\n      baseURL: process.env.ORDERMANAGEMENTMSURL,\n      timeout: 3000,\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return await ordermanagementAPI.get(\"/customer/listorders/\" + customerID).then(orders => {\n      return orders.data; // Add returns for other catch\n    }).catch(error => {\n      console.log('There was an error retrieving a list of orders for the customer', error);\n      return null;\n    });\n  } catch (error) {\n    console.error('There was an error retrieving a list of orders for the customer' + customerID, error);\n    return null;\n  }\n}\n\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  // Here you can check authentication status directly before rendering the page,\n  // however the page would be a serverless function, which is more expensive and\n  // slower than a static page with client side authentication\n  const x = 5;\n  const session = await auth0.getSession(req, res);\n\n  if (!session || !session.user) {\n    res.writeHead(302, {\n      Location: '/api/login'\n    });\n    res.end();\n    return;\n  }\n\n  return {\n    props: {\n      user: session.user\n    }\n  };\n}\nexport default Profile;","map":null,"metadata":{},"sourceType":"module"}