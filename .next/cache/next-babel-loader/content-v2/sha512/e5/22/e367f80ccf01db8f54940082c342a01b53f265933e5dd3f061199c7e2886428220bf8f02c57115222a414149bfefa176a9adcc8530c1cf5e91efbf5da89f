{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { createContext } from 'react';\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport Router from 'next/router';\nexport var AppContext = /*#__PURE__*/createContext();\nvar cartAPI = axios.create({\n  baseURL: process.env.CARTMSURL,\n  timeout: 3000,\n  headers: {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nvar productAPI = axios.create({\n  baseURL: process.env.PRODUCTSMSURL,\n  timeout: 3000,\n  headers: {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nvar ordermanagementAPI = axios.create({\n  baseURL: process.env.ORDERMANAGEMENTMSURL,\n  timeout: 3000,\n  headers: {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nvar AppWrapper = /*#__PURE__*/function (_Component) {\n  _inherits(AppWrapper, _Component);\n\n  var _super = _createSuper(AppWrapper);\n\n  function AppWrapper() {\n    var _this;\n\n    _classCallCheck(this, AppWrapper);\n\n    _this = _super.call(this);\n    _this.state = {\n      cartID: \"\",\n      order: {\n        customer: {\n          firstname: \"\"\n        }\n      },\n      cart: {\n        line_items: [{\n          media: {\n            source: \"\"\n          },\n          line_total: {\n            formatted_with_symbol: \"\"\n          }\n        }],\n        subtotal: {\n          formatted_with_symbol: \"\"\n        },\n        total_unique_items: 0\n      },\n      isCartVisible: false,\n      products: [],\n      checkoutToken: {},\n      loadOrderFromLocalStorage: _this.loadOrderFromLocalStorage.bind(_assertThisInitialized(_this)),\n      toggleCart: _this.toggleCart.bind(_assertThisInitialized(_this)),\n      handleAddToCart: _this.handleAddToCart.bind(_assertThisInitialized(_this)),\n      handleUpdateCartQty: _this.handleUpdateCartQty.bind(_assertThisInitialized(_this)),\n      handleRemoveFromCart: _this.handleRemoveFromCart.bind(_assertThisInitialized(_this)),\n      handleEmptyCart: _this.handleEmptyCart.bind(_assertThisInitialized(_this)),\n      fetchCart: _this.fetchCart.bind(_assertThisInitialized(_this)),\n      refreshCart: _this.refreshCart.bind(_assertThisInitialized(_this)),\n      handleCaptureCheckout: _this.handleCaptureCheckout.bind(_assertThisInitialized(_this)),\n      fetchProducts: _this.fetchProducts.bind(_assertThisInitialized(_this)),\n      generateCheckoutToken: _this.generateCheckoutToken.bind(_assertThisInitialized(_this))\n    };\n    return _this;\n  }\n  /**\r\n   * Fetch products data from Chec and stores in the products data object.\r\n   * https://commercejs.com/docs/sdk/products\r\n   */\n\n\n  _createClass(AppWrapper, [{\n    key: \"fetchProducts\",\n    value: function () {\n      var _fetchProducts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                productAPI.get(\"/get\").then(function (products) {\n                  _this2.setState({\n                    products: products.data.data\n                  });\n                }).catch(function (error) {\n                  console.log('There was an error fetching the products', error);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fetchProducts() {\n        return _fetchProducts.apply(this, arguments);\n      }\n\n      return fetchProducts;\n    }()\n  }, {\n    key: \"fetchCart\",\n    value: function () {\n      var _fetchCart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var cartID;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                cartID = Cookies.get('cartID');\n                _context2.next = 3;\n                return this.retrieveCart(cartID);\n\n              case 3:\n                if (!_context2.sent) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                console.log(\"Cart Retrieved!\");\n                _context2.next = 14;\n                break;\n\n              case 7:\n                _context2.next = 9;\n                return this.createCart();\n\n              case 9:\n                if (!_context2.sent) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                console.log(\"Cart Created!\");\n                _context2.next = 14;\n                break;\n\n              case 13:\n                console.error(\"An error occured while fetching the cart.\");\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetchCart() {\n        return _fetchCart.apply(this, arguments);\n      }\n\n      return fetchCart;\n    }() //Actions\n\n    /**\r\n     * Fetch a saved order receipt from local storage so we can show the confirmation page\r\n     * again between page refreshes.\r\n     */\n\n  }, {\n    key: \"loadOrderFromLocalStorage\",\n    value: function loadOrderFromLocalStorage() {\n      if (window.localStorage.getItem('order_receipt')) {\n        this.setState({\n          order: JSON.parse(window.localStorage.getItem('order_receipt'))\n        });\n      }\n    }\n    /**\r\n     * Show hide cart in nav\r\n     */\n\n  }, {\n    key: \"toggleCart\",\n    value: function toggleCart() {\n      var isCartVisible = this.state.isCartVisible;\n      this.setState({\n        isCartVisible: !isCartVisible\n      });\n    } //-> start of cart functions\n\n    /**\r\n     * Adds a product to the current cart in session\r\n     * https://commercejs.com/docs/sdk/cart/#add-to-cart\r\n     *\r\n     * @param {string} productId The ID of the product being added\r\n     * @param {number} quantity The quantity of the product being added\r\n     */\n\n  }, {\n    key: \"handleAddToCart\",\n    value: function () {\n      var _handleAddToCart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(productId, quantity) {\n        var _this3 = this;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return cartAPI.post(\"/addto\", {\n                  cartID: this.state.cartID,\n                  productId: productId,\n                  quantity: quantity\n                }).then(function (item) {\n                  _this3.setState({\n                    cart: item.data.cart\n                  });\n                }).catch(function (error) {\n                  console.log('There was an adding a cart item', error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleAddToCart(_x, _x2) {\n        return _handleAddToCart.apply(this, arguments);\n      }\n\n      return handleAddToCart;\n    }()\n    /**\r\n     * Updates line_items in cart\r\n     * https://commercejs.com/docs/sdk/cart/#update-cart\r\n     *\r\n     * @param {string} lineItemId ID of the cart line item being updated\r\n     * @param {number} quantity New line item quantity to update\r\n     */\n\n  }, {\n    key: \"handleUpdateCartQty\",\n    value: function handleUpdateCartQty(lineItemId, quantity) {\n      var _this4 = this;\n\n      cartAPI.put(\"/updateqty\", {\n        cartID: this.state.cartID,\n        lineItemId: lineItemId,\n        quantity: quantity\n      }).then(function (resp) {\n        _this4.setState({\n          cart: resp.data.cart\n        });\n      }).catch(function (error) {\n        console.log('There was an error updating the cart items', error);\n      });\n    }\n    /**\r\n     * Removes line item from cart\r\n     * https://commercejs.com/docs/sdk/cart/#remove-from-cart\r\n     *\r\n     * @param {string} lineItemId ID of the line item being removed\r\n     */\n\n  }, {\n    key: \"handleRemoveFromCart\",\n    value: function handleRemoveFromCart(lineItemId) {\n      var _this5 = this;\n\n      cartAPI.delete(\"/removefrom/\" + this.state.cartID + \"/\" + lineItemId).then(function (resp) {\n        _this5.setState({\n          cart: resp.data.cart\n        });\n      }).catch(function (error) {\n        console.error('There was an error removing the item from the cart', error);\n      });\n    }\n    /**\r\n     * Empties cart contents\r\n     * https://commercejs.com/docs/sdk/cart/#remove-from-cart\r\n     */\n\n  }, {\n    key: \"handleEmptyCart\",\n    value: function () {\n      var _handleEmptyCart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this6 = this;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return cartAPI.delete(\"/empty/\" + this.state.cartID).then(function (resp) {\n                  _this6.setState({\n                    cart: resp.data.cart\n                  });\n                }).catch(function (error) {\n                  console.error('There was an error emptying the cart', error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handleEmptyCart() {\n        return _handleEmptyCart.apply(this, arguments);\n      }\n\n      return handleEmptyCart;\n    }()\n    /**\r\n    * Creates a cart\r\n    * https://commercejs.com/docs/sdk/cart\r\n    */\n\n  }, {\n    key: \"createCart\",\n    value: function () {\n      var _createCart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _this7 = this;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return cartAPI.get(\"/create\").then(function (cart) {\n                  _this7.setState({\n                    cart: cart.data,\n                    cartID: cart.data.id\n                  });\n\n                  Cookies.set('cartID', cart.data.id);\n                  return true;\n                }).catch(function (error) {\n                  console.error(error);\n                  return false;\n                });\n\n              case 2:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function createCart() {\n        return _createCart.apply(this, arguments);\n      }\n\n      return createCart;\n    }()\n  }, {\n    key: \"retrieveCart\",\n    value: function () {\n      var _retrieveCart = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(cartID) {\n        var _this8 = this;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return cartAPI.get(\"/fetch/\" + cartID).then(function (cart) {\n                  _this8.setState({\n                    cart: cart.data,\n                    cartID: cart.data.id\n                  });\n\n                  return true;\n                }).catch(function (error) {\n                  console.error(error);\n                  return false;\n                });\n\n              case 2:\n                return _context6.abrupt(\"return\", _context6.sent);\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function retrieveCart(_x3) {\n        return _retrieveCart.apply(this, arguments);\n      }\n\n      return retrieveCart;\n    }()\n    /**\r\n     * Refreshes to a new cart\r\n     * https://commercejs.com/docs/sdk/cart#refresh-cart\r\n     */\n\n  }, {\n    key: \"refreshCart\",\n    value: function refreshCart() {\n      this.createCart();\n    } //=> end fo cart functions\n\n    /**\r\n     * Captures the checkout\r\n     * https://commercejs.com/docs/sdk/checkout#capture-order\r\n     *\r\n     * @param {object} newOrder The new order object data\r\n     */\n\n  }, {\n    key: \"handleCaptureCheckout\",\n    value: function handleCaptureCheckout(newOrder) {\n      var _this9 = this;\n\n      try {\n        ordermanagementAPI.post(\"/checkout/create\", newOrder).then(function (order) {\n          _this9.setState({\n            order: order.data\n          }); // Store the order in session storage so we can show it again\n          // if the user refreshes the page!\n\n\n          window.localStorage.setItem('order_receipt', JSON.stringify(order)); // Clears the cart\n\n          _this9.refreshCart(); // Send the user to the receipt\n\n\n          Router.push({\n            pathname: '/Confirmation'\n          });\n        }).catch(function (error) {\n          console.log('There was an error confirming your order', error);\n        });\n      } catch (error) {\n        console.error(\"There has been an error placing the order\", error);\n      }\n    }\n    /**\r\n       *  Generates a checkout token\r\n       *  https://commercejs.com/docs/sdk/checkout#generate-token\r\n       */\n\n  }, {\n    key: \"generateCheckoutToken\",\n    value: function generateCheckoutToken() {\n      var _this10 = this;\n\n      try {\n        var cart = this.state.cart;\n\n        if (cart.line_items.length) {\n          ordermanagementAPI.post(\"/checkout/generatetoken\", {\n            cartID: cart.id\n          }).then(function (token) {\n            _this10.setState({\n              checkoutToken: token.data\n            });\n          }).catch(function (error) {\n            console.log('There was an error in generating a token', error);\n          });\n        }\n      } catch (error) {\n        console.error(\"There has been an error generating a checkout token for the order\", error);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(AppContext.Provider, {\n        value: this.state\n      }, this.props.children);\n    }\n  }]);\n\n  return AppWrapper;\n}(Component);\n\nexport { AppWrapper };\nexport function useAppContext() {\n  return useContext(AppContext);\n}","map":null,"metadata":{},"sourceType":"module"}