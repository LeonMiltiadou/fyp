{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport Pusher from 'pusher-js';\nimport axios from 'axios';\nimport ContactUsForm from '../components/ContactUsForm';\nconst PUSHERAUTHMSURL = process.env.PUSHERAUTHMSURL;\nconst PUSHER_APP_KEY = process.env.PUSHER_APP_KEY;\nconst PUSHER_CLUSTER = process.env.PUSHER_CLUSTER;\n\nclass Tracking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"latitude\": 20,\n      \"longitude\": 20,\n      \"accuracy\": \"1\"\n    };\n    this.getUpdates = this.getUpdates.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUpdates();\n  }\n\n  getUpdates() {\n    var pusher = new Pusher(PUSHER_APP_KEY, {\n      authEndpoint: PUSHERAUTHMSURL + \"/pusher/auth\",\n      cluster: PUSHER_CLUSTER\n    });\n    var channel = pusher.subscribe('private-test');\n    channel.bind('client-driver-location', data => {\n      this.setState(data); //     axios.post(`${NGROKURL}/api/new`, {\n      //         latitude: data.latitude,\n      //         longitude: data.longitude,\n      //         accuracy: data.accuracy\n      //     })\n      //         .then(function (response) {\n      //             console.log(response);\n      //         })\n      //         .catch(function (error) {\n      //             console.log(error);\n      //         });\n    });\n  }\n\n  renderMap() {\n    const {\n      latitude,\n      longitude\n    } = this.state;\n\n    if (latitude == 20 && longitude == 20) {\n      return __jsx(\"div\", {\n        id: \"tracking-not-available\"\n      }, __jsx(\"div\", {\n        id: \"tracking-bar\"\n      }), __jsx(\"h\", {\n        id: \"tracking-info\"\n      }, \"Tracking currently not available.\"));\n    } else {\n      return __jsx(\"div\", {\n        id: \"tracking-available\"\n      }, __jsx(Map, {\n        id: \"map\",\n        containerStyle: {\n          position: 'relative'\n        },\n        google: this.props.google,\n        zoom: 18,\n        center: {\n          lat: latitude,\n          lng: longitude\n        },\n        initialCenter: {\n          lat: latitude,\n          lng: longitude\n        }\n      }, __jsx(Marker, {\n        title: 'The marker`s title will appear as a tooltip.',\n        name: 'SOMA',\n        position: {\n          lat: latitude,\n          lng: longitude\n        }\n      }), __jsx(InfoWindow, {\n        onClose: this.onInfoWindowClose\n      }, __jsx(\"div\", null, __jsx(\"h1\", null, \"\\\"this.state.selectedPlace.name\\\"\")))));\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"tracking-page\"\n    }, __jsx(\"div\", {\n      className: \"tracking-title\"\n    }, \"Tracking\"), this.renderMap(), __jsx(\"div\", {\n      className: \"contact-us-title\"\n    }, \"Contact Us\"), __jsx(\"div\", {\n      id: \"contact-us\"\n    }, __jsx(ContactUsForm, null)));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.GMAPSKEY\n})(Tracking);","map":null,"metadata":{},"sourceType":"module"}