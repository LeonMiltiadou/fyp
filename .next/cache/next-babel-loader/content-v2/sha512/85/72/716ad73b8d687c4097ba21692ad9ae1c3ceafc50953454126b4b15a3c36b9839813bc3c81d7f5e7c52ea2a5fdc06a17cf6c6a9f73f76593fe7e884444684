{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KGM\\\\OneDrive\\\\Documents\\\\GitHub\\\\chec\\\\fyp\\\\pages\\\\myaccount.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// This import is only included in the server build, because it's only used by getServerSideProps\nimport { Component } from 'react';\nimport auth0 from '../lib/auth0';\nimport axios from 'axios';\nimport { AppContext } from '../context/state.js';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      orders: [],\n      showAccountDetails: false,\n      showOrders: true\n    };\n  }\n\n  async componentDidMount() {\n    let user = await this.context.getUser(this.props.user.sub);\n    const orders = await listOrdersForCustomer(user.data.app_metadata.commerceID);\n    this.setState({\n      orders: orders.data\n    });\n  }\n\n  renderAccountDetails() {\n    this.setState({\n      showAccountDetails: true,\n      showOrders: false\n    });\n  }\n\n  renderOrders() {\n    this.setState({\n      showAccountDetails: false,\n      showOrders: true\n    });\n  }\n\n  render() {\n    let {\n      user\n    } = this.props;\n    let {\n      orders,\n      showAccountDetails,\n      showOrders,\n      underlineOrders,\n      underlineAccountDetails\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"myaccount-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"myaccount-nav-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"My Account\"), __jsx(\"div\", {\n      className: \"myaccount-nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, __jsx(Navbar, {\n      variant: \"dark\",\n      className: \"navbar-myaccount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, __jsx(Nav, {\n      className: \"flex-column mr-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, __jsx(Nav.Link, {\n      onSelect: () => this.renderOrders(),\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, __jsx(\"h\", {\n      className: \"underline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 71\n      }\n    }, \"Orders\")), __jsx(Nav.Link, {\n      onSelect: () => this.renderAccountDetails(),\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, __jsx(\"h\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 79\n      }\n    }, \"Account Details\")), __jsx(Nav.Link, {\n      href: \"/api/auth/logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \"Logout\")))), __jsx(\"div\", {\n      className: \"account-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, showAccountDetails && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 35\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Profile (server rendered)\"), __jsx(\"img\", {\n      src: user.picture,\n      alt: \"user picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"nickname: \", user.nickname), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"name: \", user.name)), showOrders && __jsx(\"table\", {\n      class: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, __jsx(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, \"ID Number\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, \"Order\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }\n    }, \"Total Price\"), __jsx(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, \"Status\"))), orders.map(order => __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, __jsx(\"th\", {\n      scope: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, order.customer_reference), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, order.order.line_items.map(item => __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, item.quantity, \" x \", item.product_name))), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, order.order_value.formatted_with_symbol), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, order.status_fulfillment)))))));\n  }\n\n}\n\n_defineProperty(Profile, \"contextType\", AppContext);\n\nasync function listOrdersForCustomer(customerID) {\n  try {\n    const ordermanagementAPI = axios.create({\n      baseURL: process.env.ORDERMANAGEMENTMSURL,\n      timeout: 3000,\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return await ordermanagementAPI.get(\"/customer/listorders/\" + customerID).then(orders => {\n      return orders.data; // Add returns for other catch\n    }).catch(error => {\n      console.log('There was an error retrieving a list of orders for the customer', error);\n      return null;\n    });\n  } catch (error) {\n    console.error('There was an error retrieving a list of orders for the customer' + customerID, error);\n    return null;\n  }\n}\n\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  // Here you can check authentication status directly before rendering the page,\n  // however the page would be a serverless function, which is more expensive and\n  // slower than a static page with client side authentication\n  const x = 5;\n  const session = await auth0.getSession(req, res);\n\n  if (!session || !session.user) {\n    res.writeHead(302, {\n      Location: '/api/login'\n    });\n    res.end();\n    return;\n  }\n\n  return {\n    props: {\n      user: session.user\n    }\n  };\n}\nexport default Profile;","map":{"version":3,"sources":["C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/pages/myaccount.js"],"names":["Component","auth0","axios","AppContext","Navbar","Nav","Profile","constructor","props","state","orders","showAccountDetails","showOrders","componentDidMount","user","context","getUser","sub","listOrdersForCustomer","data","app_metadata","commerceID","setState","renderAccountDetails","renderOrders","render","underlineOrders","underlineAccountDetails","picture","nickname","name","map","order","customer_reference","line_items","item","quantity","product_name","order_value","formatted_with_symbol","status_fulfillment","customerID","ordermanagementAPI","create","baseURL","process","env","ORDERMANAGEMENTMSURL","timeout","headers","get","then","catch","error","console","log","getServerSideProps","req","res","x","session","getSession","writeHead","Location","end"],"mappings":"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","sourcesContent":["// This import is only included in the server build, because it's only used by getServerSideProps\r\nimport { Component } from 'react';\r\nimport auth0 from '../lib/auth0'\r\nimport axios from 'axios';\r\nimport { AppContext } from '../context/state.js';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nclass Profile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      orders: [],\r\n      showAccountDetails: false,\r\n      showOrders: true,\r\n    }\r\n  }\r\n  static contextType = AppContext;\r\n\r\n  async componentDidMount() {\r\n\r\n    let user = await this.context.getUser(this.props.user.sub);\r\n    const orders = await listOrdersForCustomer(user.data.app_metadata.commerceID);\r\n    this.setState({ orders: orders.data });\r\n  }\r\n\r\n  renderAccountDetails() {\r\n\r\n    this.setState({ showAccountDetails: true, showOrders: false });\r\n\r\n  }\r\n\r\n  renderOrders() {\r\n    this.setState({ showAccountDetails: false, showOrders: true });\r\n\r\n  }\r\n  render() {\r\n    let { user } = this.props;\r\n    let { orders, showAccountDetails, showOrders, underlineOrders, underlineAccountDetails } = this.state;\r\n    return (\r\n      <div className=\"myaccount-page\">\r\n\r\n        <div className=\"myaccount-nav-title\">My Account</div>\r\n        <div className=\"myaccount-nav\">\r\n          <Navbar variant=\"dark\" className=\"navbar-myaccount\">\r\n            <Nav className=\"flex-column mr-5\">\r\n              <Nav.Link onSelect={() => this.renderOrders()} href=\"#\"><h className=\"underline\">Orders</h></Nav.Link>\r\n              <Nav.Link onSelect={() => this.renderAccountDetails()} href=\"#\"><h>Account Details</h></Nav.Link>\r\n              <Nav.Link href=\"/api/auth/logout\">Logout</Nav.Link>\r\n            </Nav>\r\n          </Navbar>\r\n\r\n        </div>\r\n        <div className=\"account-details\">\r\n\r\n          {showAccountDetails && (<div>\r\n            <h3>Profile (server rendered)</h3>\r\n            <img src={user.picture} alt=\"user picture\" />\r\n            <p>nickname: {user.nickname}</p>\r\n            <p>name: {user.name}</p>\r\n          </div>)}\r\n\r\n          {showOrders && (\r\n            <table class=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">ID Number</th>\r\n                  <th scope=\"col\">Order</th>\r\n                  <th scope=\"col\">Total Price</th>\r\n                  <th scope=\"col\">Status</th>\r\n                </tr>\r\n              </thead>\r\n              {orders.map((order) => (\r\n\r\n\r\n                <tbody>\r\n                  <tr>\r\n                    <th scope=\"row\">{order.customer_reference}</th>\r\n                    <td>\r\n                      {order.order.line_items.map((item) => (\r\n                        <div>{item.quantity} x { item.product_name}</div>\r\n                      ))}\r\n                    </td>\r\n                    <td>{order.order_value.formatted_with_symbol}</td>\r\n                    <td>{order.status_fulfillment}</td>\r\n                  </tr>\r\n                </tbody>\r\n\r\n              ))}\r\n            </table>)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nasync function listOrdersForCustomer(customerID) {\r\n  try {\r\n    const ordermanagementAPI = axios.create({\r\n      baseURL: process.env.ORDERMANAGEMENTMSURL,\r\n      timeout: 3000,\r\n      headers: {\r\n        \"Accept\": \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    });\r\n\r\n    return await ordermanagementAPI.get(\"/customer/listorders/\" + customerID).then((orders) => {\r\n\r\n      return orders.data; // Add returns for other catch\r\n\r\n    }).catch((error) => {\r\n      console.log('There was an error retrieving a list of orders for the customer', error);\r\n      return null;\r\n    });\r\n  } catch (error) {\r\n    console.error('There was an error retrieving a list of orders for the customer' + customerID, error);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  // Here you can check authentication status directly before rendering the page,\r\n  // however the page would be a serverless function, which is more expensive and\r\n  // slower than a static page with client side authentication\r\n  const x = 5;\r\n  const session = await auth0.getSession(req, res)\r\n\r\n  if (!session || !session.user) {\r\n    res.writeHead(302, {\r\n      Location: '/api/login',\r\n    })\r\n    res.end()\r\n    return\r\n  }\r\n  return { props: { user: session.user } }\r\n}\r\n\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}