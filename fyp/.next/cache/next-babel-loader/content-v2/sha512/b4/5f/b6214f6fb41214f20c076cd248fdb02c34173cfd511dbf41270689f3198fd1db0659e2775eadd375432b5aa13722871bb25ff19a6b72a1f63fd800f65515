{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport CartItem from './CartItem';\nimport { AppContext } from '../context/state.js';\nimport Router from 'next/router';\nimport Modal from 'react-bootstrap/Modal';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.handleEmptyCart = this.handleEmptyCart.bind(this);\n  }\n\n  handleEmptyCart() {\n    this.context.handleEmptyCart();\n  }\n\n  renderEmptyCart() {\n    const {\n      cart\n    } = this.context;\n\n    if (cart.total_unique_items > 0) {\n      return;\n    }\n\n    return __jsx(\"p\", {\n      className: \"cart__none\"\n    }, \"You have no items in your shopping cart, start adding some!\");\n  }\n\n  handleClose() {\n    this.context.toggleCart();\n  }\n\n  renderCart() {\n    const {\n      cart\n    } = this.context;\n\n    if (cart.total_unique_items === 0) {\n      return;\n    }\n\n    return __jsx(React.Fragment, null, cart.line_items.map(lineItem => __jsx(CartItem, _extends({\n      item: lineItem,\n      key: lineItem.id\n    }, this.props, {\n      className: \"cart__inner\"\n    }))), __jsx(\"div\", {\n      className: \"cart__total\"\n    }, __jsx(\"p\", {\n      className: \"cart__total-title\"\n    }, \"Subtotal:\"), __jsx(\"p\", {\n      className: \"cart__total-price\"\n    }, cart.subtotal.formatted_with_symbol)), __jsx(\"div\", {\n      className: \"cart__footer\"\n    }, __jsx(\"button\", {\n      className: \"cart__btn-empty\",\n      onClick: this.handleEmptyCart\n    }, \"Empty cart\"), __jsx(\"button\", {\n      className: \"cart__btn-checkout\",\n      onClick: () => Router.push({\n        pathname: '/checkout'\n      })\n    }, \"Checkout\")));\n  }\n\n  render() {\n    return __jsx(Modal, {\n      onHide: () => this.handleClose(),\n      show: this.context.isCartVisible\n    }, __jsx(Modal.Header, {\n      closeButton: true\n    }, __jsx(Modal.Title, null, \"Your Shopping Cart\")), __jsx(Modal.Body, null, __jsx(\"div\", {\n      className: \"cart\"\n    }, this.renderEmptyCart(), this.renderCart())));\n  }\n\n}\n\n_defineProperty(Cart, \"contextType\", AppContext);\n\n;\nexport default Cart;","map":null,"metadata":{},"sourceType":"module"}