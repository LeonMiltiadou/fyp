{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KGM\\\\OneDrive\\\\Documents\\\\GitHub\\\\chec\\\\fyp\\\\pages\\\\App.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport { commerce } from '../lib/Commerce';\nimport '../styles/scss/styles.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faShoppingBag, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Switch, Route } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Hero from '../components/Hero';\nimport ProductsList from '../components/ProductsList';\nimport Cart from '../components/Cart';\nimport Checkout from './Checkout';\nimport Confirmation from './Confirmation';\nimport Error from './/Error';\nlibrary.add(faShoppingBag, faTimes);\n\nclass App extends Component {\n  constructor(props) {\n    var _this$loadOrderFromLo;\n\n    super(props);\n    this.state = {\n      merchant: {},\n      products: [],\n      cart: {},\n      isCartVisible: false,\n      order: (_this$loadOrderFromLo = this.loadOrderFromLocalStorage()) !== null && _this$loadOrderFromLo !== void 0 ? _this$loadOrderFromLo : {}\n    };\n    this.handleAddToCart = this.handleAddToCart.bind(this);\n    this.handleUpdateCartQty = this.handleUpdateCartQty.bind(this);\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\n    this.handleEmptyCart = this.handleEmptyCart.bind(this);\n    this.toggleCart = this.toggleCart.bind(this);\n    this.handleCaptureCheckout = this.handleCaptureCheckout.bind(this);\n    this.refreshCart = this.refreshCart.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMerchantDetails();\n    this.fetchProducts();\n    this.fetchCart();\n    this.loadOrderFromLocalStorage();\n  }\n  /**\r\n   * Fetch a saved order receipt from local storage so we can show the confirmation page\r\n   * again between page refreshes.\r\n   */\n\n\n  loadOrderFromLocalStorage() {\n    if (window.localStorage.getItem('order_receipt')) {\n      return JSON.parse(window.localStorage.getItem('order_receipt'));\n    }\n  }\n  /**\r\n   * Show hide cart in nav\r\n   */\n\n\n  toggleCart() {\n    const {\n      isCartVisible\n    } = this.state;\n    this.setState({\n      isCartVisible: !isCartVisible\n    });\n  }\n  /**\r\n   * Fetch merchant details\r\n   * https://commercejs.com/docs/sdk/full-sdk-reference#merchants\r\n   */\n\n\n  fetchMerchantDetails() {\n    commerce.merchants.about().then(merchant => {\n      this.setState({\n        merchant: merchant\n      });\n    }).catch(error => {\n      console.log('There was an error fetch the merchant details', error);\n    });\n  }\n  /**\r\n   * Fetch products data from Chec and stores in the products data object.\r\n   * https://commercejs.com/docs/sdk/products\r\n   */\n\n\n  fetchProducts() {\n    commerce.products.list().then(products => {\n      this.setState({\n        products: products.data\n      });\n    }).catch(error => {\n      console.log('There was an error fetching the products', error);\n    });\n  }\n  /**\r\n   * Retrieve the current cart or create one if one does not exist\r\n   * https://commercejs.com/docs/sdk/cart\r\n   */\n\n\n  fetchCart() {\n    commerce.cart.retrieve().then(cart => {\n      this.setState({\n        cart: cart\n      });\n    }).catch(error => {\n      console.error('There was an error fetching the cart', error);\n    });\n  }\n  /**\r\n   * Adds a product to the current cart in session\r\n   * https://commercejs.com/docs/sdk/cart/#add-to-cart\r\n   *\r\n   * @param {string} productId The ID of the product being added\r\n   * @param {number} quantity The quantity of the product being added\r\n   */\n\n\n  handleAddToCart(productId, quantity) {\n    commerce.cart.add(productId, quantity).then(item => {\n      this.setState({\n        cart: item.cart\n      });\n    }).catch(error => {\n      console.error('There was an error adding the item to the cart', error);\n    });\n  }\n  /**\r\n   * Updates line_items in cart\r\n   * https://commercejs.com/docs/sdk/cart/#update-cart\r\n   *\r\n   * @param {string} lineItemId ID of the cart line item being updated\r\n   * @param {number} quantity New line item quantity to update\r\n   */\n\n\n  handleUpdateCartQty(lineItemId, quantity) {\n    commerce.cart.update(lineItemId, {\n      quantity\n    }).then(resp => {\n      this.setState({\n        cart: resp.cart\n      });\n    }).catch(error => {\n      console.log('There was an error updating the cart items', error);\n    });\n  }\n  /**\r\n   * Removes line item from cart\r\n   * https://commercejs.com/docs/sdk/cart/#remove-from-cart\r\n   *\r\n   * @param {string} lineItemId ID of the line item being removed\r\n   */\n\n\n  handleRemoveFromCart(lineItemId) {\n    commerce.cart.remove(lineItemId).then(resp => {\n      this.setState({\n        cart: resp.cart\n      });\n    }).catch(error => {\n      console.error('There was an error removing the item from the cart', error);\n    });\n  }\n  /**\r\n   * Empties cart contents\r\n   * https://commercejs.com/docs/sdk/cart/#remove-from-cart\r\n   */\n\n\n  handleEmptyCart() {\n    commerce.cart.empty().then(resp => {\n      this.setState({\n        cart: resp.cart\n      });\n    }).catch(error => {\n      console.error('There was an error emptying the cart', error);\n    });\n  }\n  /**\r\n   * Captures the checkout\r\n   * https://commercejs.com/docs/sdk/checkout#capture-order\r\n   *\r\n   * @param {string} checkoutTokenId The ID of the checkout token\r\n   * @param {object} newOrder The new order object data\r\n   */\n\n\n  handleCaptureCheckout(checkoutTokenId, newOrder) {\n    commerce.checkout.capture(checkoutTokenId, newOrder).then(order => {\n      this.setState({\n        order: order\n      }); // Store the order in session storage so we can show it again\n      // if the user refreshes the page!\n\n      window.localStorage.setItem('order_receipt', JSON.stringify(order)); // Clears the cart\n\n      this.refreshCart(); // Send the user to the receipt\n\n      this.props.history.push('/confirmation');\n    }).catch(error => {\n      console.log('There was an error confirming your order', error);\n    });\n  }\n  /**\r\n   * Refreshes to a new cart\r\n   * https://commercejs.com/docs/sdk/cart#refresh-cart\r\n   */\n\n\n  refreshCart() {\n    commerce.cart.refresh().then(newCart => {\n      this.setState({\n        cart: newCart\n      });\n    }).catch(error => {\n      console.log('There was an error refreshing your cart', error);\n    });\n  }\n\n  renderCartNav() {\n    const {\n      cart,\n      isCartVisible\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"nav__cart\",\n      onClick: this.toggleCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, !isCartVisible ? __jsx(\"button\", {\n      className: \"nav__cart-open\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, __jsx(FontAwesomeIcon, {\n      size: \"2x\",\n      icon: \"shopping-bag\",\n      color: \"#292B83\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }\n    }), cart !== null ? __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 32\n      }\n    }, cart.total_items) : '') : __jsx(\"button\", {\n      className: \"nav__cart-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, __jsx(FontAwesomeIcon, {\n      size: \"1x\",\n      icon: \"times\",\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n  render() {\n    const {\n      products,\n      merchant,\n      cart,\n      isCartVisible,\n      order\n    } = this.state;\n    return __jsx(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }\n    }, __jsx(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }\n    }, __jsx(Route, {\n      path: \"/\",\n      exact: true,\n      render: props => {\n        return __jsx(React.Fragment, null, __jsx(Hero, {\n          merchant: merchant,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 19\n          }\n        }), this.renderCartNav(), isCartVisible && __jsx(Cart, _extends({}, props, {\n          cart: cart,\n          onUpdateCartQty: this.handleUpdateCartQty,\n          onRemoveFromCart: this.handleRemoveFromCart,\n          onEmptyCart: this.handleEmptyCart,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }\n        })), __jsx(ProductsList, _extends({}, props, {\n          products: products,\n          onAddToCart: this.handleAddToCart,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }\n        })));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }), __jsx(Route, {\n      path: \"/checkout\",\n      exact: true,\n      render: props => {\n        return __jsx(Checkout, _extends({}, props, {\n          cart: cart,\n          onCaptureCheckout: this.handleCaptureCheckout,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }), __jsx(Route, {\n      path: \"/confirmation\",\n      exact: true,\n      render: props => {\n        if (!order) {\n          return props.history.push('/');\n        }\n\n        return __jsx(Confirmation, _extends({}, props, {\n          order: order,\n          onBackToHome: () => window.localStorage.removeItem('order_receipt'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }\n    }), __jsx(Route, {\n      path: \"/error\",\n      exact: true,\n      render: props => {\n        if (!order) {\n          return props.history.push('/');\n        }\n\n        return __jsx(Error, _extends({}, props, {\n          order: order,\n          onBackToHome: () => window.localStorage.removeItem('order_receipt'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\n;\nexport default App;\nApp.propTypes = {\n  history: PropTypes.object\n};","map":{"version":3,"sources":["C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/pages/App.js"],"names":["React","Component","commerce","FontAwesomeIcon","library","faShoppingBag","faTimes","Switch","Route","PropTypes","Hero","ProductsList","Cart","Checkout","Confirmation","Error","add","App","constructor","props","state","merchant","products","cart","isCartVisible","order","loadOrderFromLocalStorage","handleAddToCart","bind","handleUpdateCartQty","handleRemoveFromCart","handleEmptyCart","toggleCart","handleCaptureCheckout","refreshCart","componentDidMount","fetchMerchantDetails","fetchProducts","fetchCart","window","localStorage","getItem","JSON","parse","setState","merchants","about","then","catch","error","console","log","list","data","retrieve","productId","quantity","item","lineItemId","update","resp","remove","empty","checkoutTokenId","newOrder","checkout","capture","setItem","stringify","history","push","refresh","newCart","renderCartNav","total_items","render","removeItem","propTypes","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { commerce } from '../lib/Commerce';\r\nimport '../styles/scss/styles.scss'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faShoppingBag, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Hero from '../components/Hero';\r\nimport ProductsList from '../components/ProductsList';\r\nimport Cart from '../components/Cart';\r\nimport Checkout from './Checkout';\r\nimport Confirmation from './Confirmation';\r\nimport Error from './/Error';\r\n\r\nlibrary.add(faShoppingBag, faTimes)\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      merchant: {},\r\n      products: [],\r\n      cart: {},\r\n      isCartVisible: false,\r\n      order: this.loadOrderFromLocalStorage() ?? {},\r\n    }\r\n\r\n    this.handleAddToCart = this.handleAddToCart.bind(this);\r\n    this.handleUpdateCartQty = this.handleUpdateCartQty.bind(this);\r\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\r\n    this.handleEmptyCart = this.handleEmptyCart.bind(this);\r\n    this.toggleCart = this.toggleCart.bind(this);\r\n    this.handleCaptureCheckout = this.handleCaptureCheckout.bind(this);\r\n    this.refreshCart = this.refreshCart.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchMerchantDetails();\r\n    this.fetchProducts();\r\n    this.fetchCart();\r\n    this.loadOrderFromLocalStorage();\r\n  }\r\n\r\n  /**\r\n   * Fetch a saved order receipt from local storage so we can show the confirmation page\r\n   * again between page refreshes.\r\n   */\r\n  loadOrderFromLocalStorage() {\r\n    if (window.localStorage.getItem('order_receipt')) {\r\n      return JSON.parse(window.localStorage.getItem('order_receipt'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show hide cart in nav\r\n   */\r\n  toggleCart() {\r\n    const { isCartVisible } = this.state;\r\n    this.setState({\r\n      isCartVisible: !isCartVisible,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch merchant details\r\n   * https://commercejs.com/docs/sdk/full-sdk-reference#merchants\r\n   */\r\n  fetchMerchantDetails() {\r\n    commerce.merchants.about().then((merchant) => {\r\n      this.setState({ merchant: merchant });\r\n    }).catch((error) => {\r\n      console.log('There was an error fetch the merchant details', error)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Fetch products data from Chec and stores in the products data object.\r\n   * https://commercejs.com/docs/sdk/products\r\n   */\r\n  fetchProducts() {\r\n    commerce.products.list().then((products) => {\r\n      this.setState({ products: products.data });\r\n    }).catch((error) => {\r\n      console.log('There was an error fetching the products', error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Retrieve the current cart or create one if one does not exist\r\n   * https://commercejs.com/docs/sdk/cart\r\n   */\r\n  fetchCart() {\r\n    commerce.cart.retrieve().then((cart) => {\r\n      this.setState({ cart: cart });\r\n    }).catch((error) => {\r\n      console.error('There was an error fetching the cart', error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Adds a product to the current cart in session\r\n   * https://commercejs.com/docs/sdk/cart/#add-to-cart\r\n   *\r\n   * @param {string} productId The ID of the product being added\r\n   * @param {number} quantity The quantity of the product being added\r\n   */\r\n  handleAddToCart(productId, quantity) {\r\n    commerce.cart.add(productId, quantity).then((item) => {\r\n      this.setState({ cart: item.cart })\r\n    }).catch((error) => {\r\n      console.error('There was an error adding the item to the cart', error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates line_items in cart\r\n   * https://commercejs.com/docs/sdk/cart/#update-cart\r\n   *\r\n   * @param {string} lineItemId ID of the cart line item being updated\r\n   * @param {number} quantity New line item quantity to update\r\n   */\r\n  handleUpdateCartQty(lineItemId, quantity) {\r\n    commerce.cart.update(lineItemId, { quantity }).then((resp) => {\r\n      this.setState({ cart: resp.cart })\r\n    }).catch((error) => {\r\n      console.log('There was an error updating the cart items', error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes line item from cart\r\n   * https://commercejs.com/docs/sdk/cart/#remove-from-cart\r\n   *\r\n   * @param {string} lineItemId ID of the line item being removed\r\n   */\r\n  handleRemoveFromCart(lineItemId) {\r\n    commerce.cart.remove(lineItemId).then((resp) => {\r\n      this.setState({\r\n        cart: resp.cart\r\n      })\r\n    }).catch((error) => {\r\n      console.error('There was an error removing the item from the cart', error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Empties cart contents\r\n   * https://commercejs.com/docs/sdk/cart/#remove-from-cart\r\n   */\r\n  handleEmptyCart() {\r\n    commerce.cart.empty().then((resp) => {\r\n      this.setState({ cart: resp.cart })\r\n    }).catch((error) => {\r\n      console.error('There was an error emptying the cart', error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Captures the checkout\r\n   * https://commercejs.com/docs/sdk/checkout#capture-order\r\n   *\r\n   * @param {string} checkoutTokenId The ID of the checkout token\r\n   * @param {object} newOrder The new order object data\r\n   */\r\n  handleCaptureCheckout(checkoutTokenId, newOrder) {\r\n\r\n    commerce.checkout.capture(checkoutTokenId, newOrder).then((order) => {\r\n\r\n      this.setState({\r\n        order: order,\r\n      });\r\n      // Store the order in session storage so we can show it again\r\n      // if the user refreshes the page!\r\n      window.localStorage.setItem('order_receipt', JSON.stringify(order));\r\n      // Clears the cart\r\n      this.refreshCart();\r\n      // Send the user to the receipt\r\n      this.props.history.push('/confirmation');\r\n    }).catch((error) => {\r\n      console.log('There was an error confirming your order', error);\r\n    });\r\n    }\r\n\r\n  /**\r\n   * Refreshes to a new cart\r\n   * https://commercejs.com/docs/sdk/cart#refresh-cart\r\n   */\r\n  refreshCart() {\r\n    commerce.cart.refresh().then((newCart) => {\r\n      this.setState({\r\n        cart: newCart,\r\n      })\r\n    }).catch((error) => {\r\n      console.log('There was an error refreshing your cart', error);\r\n    });\r\n  }\r\n\r\n  renderCartNav() {\r\n    const { cart, isCartVisible } = this.state;\r\n\r\n    return (\r\n      <div className=\"nav\">\r\n        <div className=\"nav__cart\" onClick={this.toggleCart}>\r\n          {!isCartVisible ? (\r\n            <button className=\"nav__cart-open\">\r\n              <FontAwesomeIcon size=\"2x\" icon=\"shopping-bag\" color=\"#292B83\"/>\r\n              {cart !== null ? <span>{cart.total_items}</span> : ''}\r\n            </button>\r\n            ) : (\r\n              <button className=\"nav__cart-close\">\r\n                <FontAwesomeIcon size=\"1x\" icon=\"times\" color=\"white\"/>\r\n              </button>\r\n            )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      products,\r\n      merchant,\r\n      cart,\r\n      isCartVisible,\r\n      order\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={(props) => {\r\n              return (\r\n                <>\r\n                  <Hero\r\n                    merchant={merchant}\r\n                  />\r\n                  { this.renderCartNav() }\r\n                  {isCartVisible &&\r\n                    <Cart\r\n                      {...props}\r\n                      cart={cart}\r\n                      onUpdateCartQty={this.handleUpdateCartQty}\r\n                      onRemoveFromCart={this.handleRemoveFromCart}\r\n                      onEmptyCart={this.handleEmptyCart}\r\n                    />\r\n                  }\r\n                  <ProductsList\r\n                    {...props}\r\n                    products={products}\r\n                    onAddToCart={this.handleAddToCart}\r\n                  />\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/checkout\"\r\n            exact\r\n            render={(props) => {\r\n              return (\r\n                <Checkout\r\n                  {...props}\r\n                  cart={cart}\r\n                  onCaptureCheckout={this.handleCaptureCheckout}\r\n                />\r\n              )\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/confirmation\"\r\n            exact\r\n            render={(props) => {\r\n              if (!order) {\r\n                return props.history.push('/');\r\n              }\r\n              return (\r\n                <Confirmation\r\n                  {...props}\r\n                  order={order}\r\n                  onBackToHome={() => window.localStorage.removeItem('order_receipt')}\r\n                />\r\n              )\r\n            }}\r\n        /><Route\r\n        path=\"/error\"\r\n        exact\r\n        render={(props) => {\r\n          if (!order) {\r\n            return props.history.push('/');\r\n          }\r\n          return (\r\n            <Error\r\n              {...props}\r\n              order={order}\r\n              onBackToHome={() => window.localStorage.removeItem('order_receipt')}\r\n            />\r\n          )\r\n        }}\r\n    />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n\r\nApp.propTypes = {\r\n  history: PropTypes.object,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}