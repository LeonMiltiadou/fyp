{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KGM\\\\OneDrive\\\\Documents\\\\GitHub\\\\chec\\\\fyp\\\\components\\\\NavBar.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Cart from './Cart';\nimport { AppContext } from '../context/state';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faShoppingBag, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nlibrary.add(faShoppingBag, faTimes);\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.context.fetchCart();\n  }\n\n  renderCartNav() {\n    const {\n      cart,\n      isCartVisible\n    } = this.context;\n    return __jsx(\"div\", {\n      className: \"nav__cart\",\n      onClick: this.context.toggleCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, !isCartVisible ? __jsx(\"button\", {\n      className: \"nav__cart-open\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, __jsx(FontAwesomeIcon, {\n      size: \"2x\",\n      icon: \"shopping-bag\",\n      color: \"#292B83\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }), cart !== null ? __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 42\n      }\n    }, cart.total_items) : '') : __jsx(\"button\", {\n      className: \"nav__cart-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, __jsx(FontAwesomeIcon, {\n      size: \"1x\",\n      icon: \"times\",\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    })));\n  }\n\n  render() {\n    return __jsx(Navbar, {\n      bg: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, __jsx(Nav, {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, __jsx(Navbar.Brand, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"FYP Coffee Shop\")), __jsx(Nav, {\n      className: \"ml-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, __jsx(Nav.Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, \"Home\"), __jsx(Nav.Link, {\n      href: \"/Tracking\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"Where are we?\"), __jsx(Nav.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, this.renderCartNav(), this.context.isCartVisible && __jsx(Cart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n}\n\n_defineProperty(NavBar, \"contextType\", AppContext);\n\n;\nexport default NavBar;","map":{"version":3,"sources":["C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/components/NavBar.js"],"names":["React","Component","Cart","AppContext","FontAwesomeIcon","library","faShoppingBag","faTimes","Navbar","Nav","add","NavBar","constructor","props","componentDidMount","context","fetchCart","renderCartNav","cart","isCartVisible","toggleCart","total_items","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,mCAAvC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEAJ,OAAO,CAACK,GAAR,CAAYJ,aAAZ,EAA2BC,OAA3B;;AAGA,MAAMI,MAAN,SAAqBV,SAArB,CAA+B;AAC3BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,OAAL,CAAaC,SAAb;AACH;;AACDC,EAAAA,aAAa,GAAG;AACZ,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAA0B,KAAKJ,OAArC;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAE,KAAKA,OAAL,CAAaK,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAACD,aAAD,GACG;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,IAAtB;AAA2B,MAAA,IAAI,EAAC,cAAhC;AAA+C,MAAA,KAAK,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKD,IAAI,KAAK,IAAT,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,IAAI,CAACG,WAAZ,CAAhB,GAAkD,EAFvD,CADH,GAMO;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,IAAtB;AAA2B,MAAA,IAAI,EAAC,OAAhC;AAAwC,MAAA,KAAK,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPZ,CADJ;AAcH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,GAAD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,EAII,MAAC,GAAD;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,MAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI,MAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,EAII,MAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,aAAL,EADL,EAEK,KAAKF,OAAL,CAAaI,aAAb,IACG,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,CAJJ,CAJJ,CADJ;AAmBH;;AAhD0B;;gBAAzBR,M,iBAKmBR,U;;AA4CxB;AAED,eAAeQ,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Cart from './Cart';\r\nimport { AppContext } from '../context/state'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faShoppingBag, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nlibrary.add(faShoppingBag, faTimes)\r\n\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    static contextType = AppContext;\r\n    componentDidMount() {\r\n        this.context.fetchCart();\r\n    }\r\n    renderCartNav() {\r\n        const { cart, isCartVisible } = this.context;\r\n\r\n        return (\r\n            <div className=\"nav__cart\" onClick={this.context.toggleCart}>\r\n                {!isCartVisible ? (\r\n                    <button className=\"nav__cart-open\">\r\n                        <FontAwesomeIcon size=\"2x\" icon=\"shopping-bag\" color=\"#292B83\" />\r\n                        {cart !== null ? <span>{cart.total_items}</span> : ''}\r\n                    </button>\r\n                ) : (\r\n                        <button className=\"nav__cart-close\">\r\n                            <FontAwesomeIcon size=\"1x\" icon=\"times\" color=\"white\" />\r\n                        </button>\r\n                    )}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"light\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Navbar.Brand>FYP Coffee Shop</Navbar.Brand>\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n\r\n                    <Nav.Link href=\"/\">Home</Nav.Link>\r\n                    <Nav.Link href=\"/Tracking\">Where are we?</Nav.Link>\r\n                    <Nav.Item>\r\n                        {this.renderCartNav()}\r\n                        {this.context.isCartVisible &&\r\n                            <Cart />\r\n                        }\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar>\r\n\r\n        );\r\n    };\r\n};\r\n\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}