{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KGM\\\\OneDrive\\\\Documents\\\\GitHub\\\\chec\\\\fyp\\\\lib\\\\user.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useEffect } from 'react';\nexport async function fetchUser(cookie = '') {\n  if (false && window.__user) {\n    return window.__user;\n  }\n\n  authMsBaseUrl = process.env.AUTHMSBASEURL;\n  const res = await fetch('/api/me', cookie ? {\n    headers: {\n      cookie\n    }\n  } : {});\n\n  if (!res.ok) {\n    delete window.__user;\n    return null;\n  }\n\n  const json = await res.json();\n\n  if (false) {\n    window.__user = json;\n  }\n\n  return json;\n}\nexport function useFetchUser({\n  required\n} = {}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(() => !(false && window.__user));\n  const {\n    0: user,\n    1: setUser\n  } = useState(() => {\n    if (true) {\n      return null;\n    }\n\n    return window.__user || null;\n  });\n  useEffect(() => {\n    if (!loading && user) {\n      return;\n    }\n\n    setLoading(true);\n    let isMounted = true;\n    fetchUser().then(user => {\n      // Only set the user if the component is still mounted\n      if (isMounted) {\n        // When the user is not logged in but login is required\n        if (required && !user) {\n          window.location.href = '/api/login';\n          return;\n        }\n\n        setUser(user);\n        setLoading(false);\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return {\n    user,\n    loading\n  };\n}\nexport function withUseFetchUser(Component) {\n  return function WrappedComponent(props) {\n    const myHookValue = useFetchUser();\n    return __jsx(Component, _extends({}, props, {\n      useFetchUser: myHookValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    }));\n  };\n}","map":{"version":3,"sources":["C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/lib/user.js"],"names":["useState","useEffect","fetchUser","cookie","window","__user","authMsBaseUrl","process","env","AUTHMSBASEURL","res","fetch","headers","ok","json","useFetchUser","required","loading","setLoading","user","setUser","isMounted","then","location","href","withUseFetchUser","Component","WrappedComponent","props","myHookValue"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,eAAeC,SAAf,CAAyBC,MAAM,GAAG,EAAlC,EAAsC;AAC3C,MAAI,SAAiCC,MAAM,CAACC,MAA5C,EAAoD;AAClD,WAAOD,MAAM,CAACC,MAAd;AACD;;AAEDC,EAAAA,aAAa,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAA5B;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,SADqB,EAErBR,MAAM,GACF;AACES,IAAAA,OAAO,EAAE;AACPT,MAAAA;AADO;AADX,GADE,GAMF,EARiB,CAAvB;;AAWA,MAAI,CAACO,GAAG,CAACG,EAAT,EAAa;AACX,WAAOT,MAAM,CAACC,MAAd;AACA,WAAO,IAAP;AACD;;AAED,QAAMS,IAAI,GAAG,MAAMJ,GAAG,CAACI,IAAJ,EAAnB;;AACA,aAAmC;AACjCV,IAAAA,MAAM,CAACC,MAAP,GAAgBS,IAAhB;AACD;;AACD,SAAOA,IAAP;AACD;AAED,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,IAAe,EAArC,EAAyC;AAC9C,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBlB,QAAQ,CACpC,MAAM,EAAE,SAAiCI,MAAM,CAACC,MAA1C,CAD8B,CAAtC;AAGA,QAAM;AAAA,OAACc,IAAD;AAAA,OAAOC;AAAP,MAAkBpB,QAAQ,CAAC,MAAM;AACrC,cAAmC;AACjC,aAAO,IAAP;AACD;;AAED,WAAOI,MAAM,CAACC,MAAP,IAAiB,IAAxB;AACD,GAN+B,CAAhC;AAQAJ,EAAAA,SAAS,CACP,MAAM;AACJ,QAAI,CAACgB,OAAD,IAAYE,IAAhB,EAAsB;AACpB;AACD;;AACDD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIG,SAAS,GAAG,IAAhB;AAEAnB,IAAAA,SAAS,GAAGoB,IAAZ,CAAkBH,IAAD,IAAU;AACzB;AACA,UAAIE,SAAJ,EAAe;AACb;AACA,YAAIL,QAAQ,IAAI,CAACG,IAAjB,EAAuB;AACrBf,UAAAA,MAAM,CAACmB,QAAP,CAAgBC,IAAhB,GAAuB,YAAvB;AACA;AACD;;AACDJ,QAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAXD;AAaA,WAAO,MAAM;AACXG,MAAAA,SAAS,GAAG,KAAZ;AACD,KAFD;AAGD,GAxBM,EAyBP;AACA,IA1BO,CAAT;AA6BA,SAAO;AAAEF,IAAAA,IAAF;AAAQF,IAAAA;AAAR,GAAP;AACD;AAED,OAAO,SAASQ,gBAAT,CAA0BC,SAA1B,EAAqC;AAC1C,SAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AACtC,UAAMC,WAAW,GAAGd,YAAY,EAAhC;AACA,WAAO,MAAC,SAAD,eAAea,KAAf;AAAsB,MAAA,YAAY,EAAEC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHD;AAID","sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nexport async function fetchUser(cookie = '') {\r\n  if (typeof window !== 'undefined' && window.__user) {\r\n    return window.__user\r\n  }\r\n\r\n  authMsBaseUrl = process.env.AUTHMSBASEURL\r\n  const res = await fetch(\r\n    '/api/me',\r\n    cookie\r\n      ? {\r\n          headers: {\r\n            cookie,\r\n          },\r\n        }\r\n      : {}\r\n  )\r\n\r\n  if (!res.ok) {\r\n    delete window.__user\r\n    return null\r\n  }\r\n\r\n  const json = await res.json()\r\n  if (typeof window !== 'undefined') {\r\n    window.__user = json\r\n  }\r\n  return json\r\n}\r\n\r\nexport function useFetchUser({ required } = {}) {\r\n  const [loading, setLoading] = useState(\r\n    () => !(typeof window !== 'undefined' && window.__user)\r\n  )\r\n  const [user, setUser] = useState(() => {\r\n    if (typeof window === 'undefined') {\r\n      return null\r\n    }\r\n\r\n    return window.__user || null\r\n  })\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!loading && user) {\r\n        return\r\n      }\r\n      setLoading(true)\r\n      let isMounted = true\r\n\r\n      fetchUser().then((user) => {\r\n        // Only set the user if the component is still mounted\r\n        if (isMounted) {\r\n          // When the user is not logged in but login is required\r\n          if (required && !user) {\r\n            window.location.href = '/api/login'\r\n            return\r\n          }\r\n          setUser(user)\r\n          setLoading(false)\r\n        }\r\n      })\r\n\r\n      return () => {\r\n        isMounted = false\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  )\r\n\r\n  return { user, loading }\r\n} \r\n\r\nexport function withUseFetchUser(Component) {\r\n  return function WrappedComponent(props) {\r\n    const myHookValue = useFetchUser();\r\n    return <Component {...props} useFetchUser={myHookValue} />;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}