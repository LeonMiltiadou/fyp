{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport CartItem from './CartItem';\nimport Link from 'next/link';\n\nvar Cart = /*#__PURE__*/function (_Component) {\n  _inherits(Cart, _Component);\n\n  var _super = _createSuper(Cart);\n\n  function Cart(props) {\n    var _this;\n\n    _classCallCheck(this, Cart);\n\n    _this = _super.call(this, props);\n    _this.handleEmptyCart = _this.handleEmptyCart.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Cart, [{\n    key: \"handleEmptyCart\",\n    value: function handleEmptyCart() {\n      this.props.onEmptyCart();\n    }\n  }, {\n    key: \"renderEmptyCart\",\n    value: function renderEmptyCart() {\n      var cart = this.props.cart;\n\n      if (cart.total_unique_items > 0) {\n        return;\n      }\n\n      return __jsx(\"p\", {\n        className: \"cart__none\"\n      }, \"You have no items in your shopping cart, start adding some!\");\n    }\n  }, {\n    key: \"renderCart\",\n    value: function renderCart() {\n      var _this2 = this;\n\n      var cart = this.props.cart;\n\n      if (cart.total_unique_items === 0) {\n        return;\n      }\n\n      return __jsx(React.Fragment, null, cart.line_items.map(function (lineItem) {\n        return __jsx(CartItem, _extends({\n          item: lineItem,\n          key: lineItem.id\n        }, _this2.props, {\n          className: \"cart__inner\"\n        }));\n      }), __jsx(\"div\", {\n        className: \"cart__total\"\n      }, __jsx(\"p\", {\n        className: \"cart__total-title\"\n      }, \"Subtotal:\"), __jsx(\"p\", {\n        className: \"cart__total-price\"\n      }, cart.subtotal.formatted_with_symbol)), __jsx(\"div\", {\n        className: \"cart__footer\"\n      }, __jsx(\"button\", {\n        className: \"cart__btn-empty\",\n        onClick: this.handleEmptyCart\n      }, \"Empty cart\"), __jsx(Link, {\n        href: \"/checkout\"\n      }, __jsx(\"a\", {\n        className: \"cart__btn-checkout\"\n      }, \"Checkout\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"cart\"\n      }, __jsx(\"h4\", {\n        className: \"cart__heading\"\n      }, \"Your Shopping Cart\"), this.renderEmptyCart(), this.renderCart());\n    }\n  }]);\n\n  return Cart;\n}(Component);\n\n;\nexport default Cart;","map":null,"metadata":{},"sourceType":"module"}