{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport commerce from '../lib/commerce';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faShoppingBag, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { AppContext } from '../context/state.js';\nimport Hero from '../components/Hero';\nimport ProductsList from '../components/ProductsList';\nimport Cart from '../components/Cart';\nlibrary.add(faShoppingBag, faTimes);\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      merchant: {},\n      products: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchMerchantDetails();\n      this.fetchProducts();\n      this.context.fetchCart();\n      this.context.loadOrderFromLocalStorage();\n    }\n    /**\r\n     * Fetch merchant details\r\n     * https://commercejs.com/docs/sdk/full-sdk-reference#merchants\r\n     */\n\n  }, {\n    key: \"fetchMerchantDetails\",\n    value: function fetchMerchantDetails() {\n      var _this2 = this;\n\n      commerce.merchants.about().then(function (merchant) {\n        _this2.setState({\n          merchant: merchant\n        });\n      }).catch(function (error) {\n        console.log('There was an error fetch the merchant details', error);\n      });\n    }\n    /**\r\n     * Fetch products data from Chec and stores in the products data object.\r\n     * https://commercejs.com/docs/sdk/products\r\n     */\n\n  }, {\n    key: \"fetchProducts\",\n    value: function fetchProducts() {\n      var _this3 = this;\n\n      commerce.products.list().then(function (products) {\n        _this3.setState({\n          products: products.data\n        });\n      }).catch(function (error) {\n        console.log('There was an error fetching the products', error);\n      });\n    }\n  }, {\n    key: \"renderCartNav\",\n    value: function renderCartNav() {\n      var _this$context = this.context,\n          cart = _this$context.cart,\n          isCartVisible = _this$context.isCartVisible;\n      return __jsx(\"div\", {\n        className: \"nav\"\n      }, __jsx(\"div\", {\n        className: \"nav__cart\",\n        onClick: this.context.toggleCart\n      }, !isCartVisible ? __jsx(\"button\", {\n        className: \"nav__cart-open\"\n      }, __jsx(FontAwesomeIcon, {\n        size: \"2x\",\n        icon: \"shopping-bag\",\n        color: \"#292B83\"\n      }), cart !== null ? __jsx(\"span\", null, cart.total_items) : '') : __jsx(\"button\", {\n        className: \"nav__cart-close\"\n      }, __jsx(FontAwesomeIcon, {\n        size: \"1x\",\n        icon: \"times\",\n        color: \"white\"\n      }))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          products = _this$state.products,\n          merchant = _this$state.merchant;\n      return __jsx(\"div\", {\n        className: \"app\"\n      }, __jsx(React.Fragment, null, __jsx(Hero, {\n        merchant: merchant\n      }), this.renderCartNav(), this.context.isCartVisible && __jsx(Cart, _extends({}, this.props, {\n        handleCaptureCheckout: this.handleCaptureCheckout\n      })), __jsx(ProductsList, _extends({}, this.props, {\n        products: products\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\n_defineProperty(App, \"contextType\", AppContext);\n\n;\nexport default App;","map":null,"metadata":{},"sourceType":"module"}