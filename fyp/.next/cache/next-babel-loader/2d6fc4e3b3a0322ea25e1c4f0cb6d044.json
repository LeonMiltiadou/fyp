{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\KGM\\\\OneDrive\\\\Documents\\\\GitHub\\\\chec\\\\fyp\\\\pages\\\\Checkout.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport commerce from '../lib/commerce';\nimport { AppContext } from '../context/state';\nimport Router from 'next/router';\n\nclass Checkout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkoutToken: {},\n      // Customer details\n      firstName: 'Jane',\n      lastName: 'Doe',\n      email: 'janedoe@email.com',\n      // Shipping details\n      shippingName: 'Jane Doe',\n      shippingStreet: '123 Fake St',\n      shippingCity: '',\n      shippingStateProvince: '',\n      shippingPostalZipCode: '',\n      shippingCountry: '',\n      // Payment details\n      cardNum: '4242 4242 4242 4242',\n      expMonth: '11',\n      expYear: '2023',\n      ccv: '123',\n      billingPostalZipcode: '',\n      // Shipping and fulfillment data\n      shippingCountries: {},\n      shippingSubdivisions: {},\n      shippingOptions: [],\n      shippingOption: ''\n    };\n    this.handleFormChanges = this.handleFormChanges.bind(this);\n    this.handleShippingCountryChange = this.handleShippingCountryChange.bind(this);\n    this.handleSubdivisionChange = this.handleSubdivisionChange.bind(this);\n    this.handleCaptureCheckout = this.handleCaptureCheckout.bind(this);\n  }\n\n  componentDidMount() {\n    this.generateCheckoutToken();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.shippingCountry !== prevState.shippingCountry) {\n      this.fetchShippingOptions(this.state.checkoutToken.id, this.state.shippingCountry);\n    }\n  }\n\n  /**\r\n   *  Generates a checkout token\r\n   *  https://commercejs.com/docs/sdk/checkout#generate-token\r\n   */\n  generateCheckoutToken() {\n    const {\n      cart\n    } = this.context;\n\n    if (cart.line_items.length) {\n      return commerce.checkout.generateToken(cart.id, {\n        type: 'cart'\n      }).then(token => this.setState({\n        checkoutToken: token\n      })).then(() => this.fetchShippingCountries(this.state.checkoutToken.id)).catch(error => {\n        console.log('There was an error in generating a token', error);\n      });\n    }\n  }\n\n  /**\r\n   * Fetches a list of countries available to ship to checkout token\r\n   * https://commercejs.com/docs/sdk/checkout#list-available-shipping-countries\r\n   *\r\n   * @param {string} checkoutTokenId\r\n   */\n  fetchShippingCountries(checkoutTokenId) {\n    commerce.services.localeListShippingCountries(checkoutTokenId).then(countries => {\n      this.setState({\n        shippingCountries: countries.countries\n      });\n    }).catch(error => {\n      console.log('There was an error fetching a list of shipping countries', error);\n    });\n  }\n\n  /**\r\n   * Fetches the subdivisions (provinces/states) for a country\r\n   * https://commercejs.com/docs/sdk/checkout#list-all-subdivisions-for-a-country\r\n   *\r\n   * @param {string} countryCode\r\n   */\n  fetchSubdivisions(countryCode) {\n    commerce.services.localeListSubdivisions(countryCode).then(subdivisions => {\n      this.setState({\n        shippingSubdivisions: subdivisions.subdivisions\n      });\n    }).catch(error => {\n      console.log('There was an error fetching the subdivisions', error);\n    });\n  }\n\n  /**\r\n   * Fetches the available shipping methods for the current checkout\r\n   * https://commercejs.com/docs/sdk/checkout#get-shipping-methods\r\n   *\r\n   * @param {string} checkoutTokenId\r\n   * @param {string} country\r\n   * @param {string} stateProvince\r\n   */\n  fetchShippingOptions(checkoutTokenId, country, stateProvince = null) {\n    commerce.checkout.getShippingOptions(checkoutTokenId, {\n      country: country,\n      region: stateProvince\n    }).then(options => {\n      // Pre-select the first available method\n      const shippingOption = options[0] || null;\n      this.setState({\n        shippingOption: shippingOption,\n        shippingOptions: options\n      });\n    }).catch(error => {\n      console.log('There was an error fetching the shipping methods', error);\n    });\n  }\n\n  handleFormChanges(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleShippingCountryChange(e) {\n    const currentValue = e.target.value;\n    this.fetchSubdivisions(currentValue);\n  }\n\n  handleSubdivisionChange(e) {\n    const currentValue = e.target.value;\n    this.fetchShippingOptions(this.state.checkoutToken.id, this.state.shippingCountry, currentValue);\n  }\n\n  handleCaptureCheckout(e) {\n    e.preventDefault();\n    const orderData = {\n      line_items: this.state.checkoutToken.live.line_items,\n      customer: {\n        firstname: this.state.firstName,\n        lastname: this.state.lastName,\n        email: this.state.email\n      },\n      shipping: {\n        name: this.state.shippingName,\n        street: this.state.shippingStreet,\n        town_city: this.state.shippingCity,\n        county_state: this.state.shippingStateProvince,\n        postal_zip_code: this.state.shippingPostalZipCode,\n        country: this.state.shippingCountry\n      },\n      fulfillment: {\n        shipping_method: this.state.shippingOption.id\n      },\n      payment: {\n        gateway: \"test_gateway\",\n        card: {\n          number: this.state.cardNum,\n          expiry_month: this.state.expMonth,\n          expiry_year: this.state.expYear,\n          cvc: this.state.ccv,\n          postal_zip_code: this.state.billingPostalZipcode\n        }\n      }\n    };\n    this.props.onCaptureCheckout(this.state.checkoutToken.id, orderData);\n    Router.push('/confirmation');\n  }\n\n  renderCheckoutForm() {\n    const {\n      shippingCountries,\n      shippingSubdivisions,\n      shippingOptions\n    } = this.state;\n    return __jsx(\"form\", {\n      className: \"checkout__form\",\n      onChange: this.handleFormChanges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, __jsx(\"h4\", {\n      className: \"checkout__subheading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"Customer information\"), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"firstName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"First name\"), __jsx(\"input\", {\n      className: \"checkout__input\",\n      type: \"text\",\n      onChange: this.handleFormChanges,\n      value: this.state.firstName,\n      name: \"firstName\",\n      placeholder: \"Enter your first name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"lastName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, \"Last name\"), __jsx(\"input\", {\n      className: \"checkout__input\",\n      type: \"text\",\n      onChange: this.handleFormChanges,\n      value: this.state.lastName,\n      name: \"lastName\",\n      placeholder: \"Enter your last name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, \"Email\"), __jsx(\"input\", {\n      className: \"checkout__input\",\n      type: \"text\",\n      onChange: this.handleFormChanges,\n      value: this.state.email,\n      name: \"email\",\n      placeholder: \"Enter your email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }), __jsx(\"h4\", {\n      className: \"checkout__subheading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, \"Shipping details\"), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"shippingName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, \"Full name\"), __jsx(\"input\", {\n      className: \"checkout__input\",\n      type: \"text\",\n      onChange: this.handleFormChanges,\n      value: this.state.shippingName,\n      name: \"shippingName\",\n      placeholder: \"Enter your shipping full name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"shippingStreet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, \"Street address\"), __jsx(\"input\", {\n      className: \"checkout__input\",\n      type: \"text\",\n      onChange: this.handleFormChanges,\n      value: this.state.shippingStreet,\n      name: \"shippingStreet\",\n      placeholder: \"Enter your street address\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"shippingCity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, \"City\"), __jsx(\"input\", {\n      className: \"checkout__input\",\n      type: \"text\",\n      onChange: this.handleFormChanges,\n      value: this.state.shippingCity,\n      name: \"shippingCity\",\n      placeholder: \"Enter your city\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"shippingPostalZipCode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, \"Postal/Zip code\"), __jsx(\"input\", {\n      className: \"checkout__input\",\n      type: \"text\",\n      onChange: this.handleFormChanges,\n      value: this.state.shippingPostalZipCode,\n      name: \"shippingPostalZipCode\",\n      placeholder: \"Enter your postal/zip code\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"shippingCountry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, \"Country\"), __jsx(\"select\", {\n      value: this.state.shippingCountry,\n      name: \"shippingCountry\",\n      onChange: this.handleShippingCountryChange,\n      className: \"checkout__select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, __jsx(\"option\", {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, \"Country\"), Object.keys(shippingCountries).map(index => {\n      return __jsx(\"option\", {\n        value: index,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 33\n        }\n      }, shippingCountries[index]);\n    }), \";\"), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"shippingStateProvince\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, \"State/province\"), __jsx(\"select\", {\n      value: this.state.shippingStateProvince,\n      name: \"shippingStateProvince\",\n      onChange: this.handleSubdivisionChange,\n      className: \"checkout__select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, __jsx(\"option\", {\n      className: \"checkout__option\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }\n    }, \"State/province\"), Object.keys(shippingSubdivisions).map(index => {\n      return __jsx(\"option\", {\n        value: index,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 33\n        }\n      }, shippingSubdivisions[index]);\n    }), \";\"), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"shippingOption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, \"Shipping method\"), __jsx(\"select\", {\n      value: this.state.shippingOption.id,\n      name: \"shippingOption\",\n      onChange: this.handleFormChanges,\n      className: \"checkout__select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }\n    }, __jsx(\"option\", {\n      className: \"checkout__select-option\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }\n    }, \"Select a shipping method\"), shippingOptions.map((method, index) => {\n      return __jsx(\"option\", {\n        className: \"checkout__select-option\",\n        value: method.id,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 33\n        }\n      }, `${method.description} - $${method.price.formatted_with_code}`);\n    }), \";\"), __jsx(\"h4\", {\n      className: \"checkout__subheading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, \"Payment information\"), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"cardNum\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, \"Credit card number\"), __jsx(\"input\", {\n      className: \"checkout__input\",\n      type: \"text\",\n      name: \"cardNum\",\n      onChange: this.handleFormChanges,\n      value: this.state.cardNum,\n      placeholder: \"Enter your card number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"expMonth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, \"Expiry month\"), __jsx(\"input\", {\n      className: \"checkout__input\",\n      type: \"text\",\n      name: \"expMonth\",\n      onChange: this.handleFormChanges,\n      value: this.state.expMonth,\n      placeholder: \"Card expiry month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"expYear\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }\n    }, \"Expiry year\"), __jsx(\"input\", {\n      className: \"checkout__input\",\n      type: \"text\",\n      name: \"expYear\",\n      onChange: this.handleFormChanges,\n      value: this.state.expYear,\n      placeholder: \"Card expiry year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }\n    }), __jsx(\"label\", {\n      className: \"checkout__label\",\n      htmlFor: \"ccv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, \"CCV\"), __jsx(\"input\", {\n      className: \"checkout__input\",\n      type: \"text\",\n      name: \"ccv\",\n      onChange: this.handleFormChanges,\n      value: this.state.ccv,\n      placeholder: \"CCV (3 digits)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }\n    }), __jsx(\"button\", {\n      onClick: this.handleCaptureCheckout,\n      className: \"checkout__btn-confirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, \"Confirm order\"));\n  }\n\n  renderCheckoutSummary() {\n    const {\n      cart\n    } = this.context;\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"checkout__summary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }\n    }, \"Order summary\"), cart.line_items.map(lineItem => __jsx(React.Fragment, null, __jsx(\"div\", {\n      key: lineItem.id,\n      className: \"checkout__summary-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      className: \"checkout__summary-img\",\n      src: lineItem.media.source,\n      alt: lineItem.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      className: \"checkout__summary-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 33\n      }\n    }, lineItem.quantity, \" x \", lineItem.name), __jsx(\"p\", {\n      className: \"checkout__summary-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }, lineItem.line_total.formatted_with_symbol)))), __jsx(\"div\", {\n      className: \"checkout__summary-total\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      className: \"checkout__summary-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 29\n      }\n    }, \"Subtotal:\"), cart.subtotal.formatted_with_symbol))));\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"checkout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      className: \"checkout__heading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, \"Checkout\"), __jsx(\"div\", {\n      className: \"checkout__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    }, this.renderCheckoutForm(), this.renderCheckoutSummary()));\n  }\n\n}\n\n_defineProperty(Checkout, \"contextType\", AppContext);\n\n;\nexport default _c = withRouter(Checkout);\nCheckout.propTypes = {\n  history: PropTypes.object,\n  onCaptureCheckout: () => {}\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/pages/Checkout.js"],"names":["React","Component","PropTypes","commerce","AppContext","Router","Checkout","constructor","props","state","checkoutToken","firstName","lastName","email","shippingName","shippingStreet","shippingCity","shippingStateProvince","shippingPostalZipCode","shippingCountry","cardNum","expMonth","expYear","ccv","billingPostalZipcode","shippingCountries","shippingSubdivisions","shippingOptions","shippingOption","handleFormChanges","bind","handleShippingCountryChange","handleSubdivisionChange","handleCaptureCheckout","componentDidMount","generateCheckoutToken","componentDidUpdate","prevProps","prevState","fetchShippingOptions","id","cart","context","line_items","length","checkout","generateToken","type","then","token","setState","fetchShippingCountries","catch","error","console","log","checkoutTokenId","services","localeListShippingCountries","countries","fetchSubdivisions","countryCode","localeListSubdivisions","subdivisions","country","stateProvince","getShippingOptions","region","options","e","target","name","value","currentValue","preventDefault","orderData","live","customer","firstname","lastname","shipping","street","town_city","county_state","postal_zip_code","fulfillment","shipping_method","payment","gateway","card","number","expiry_month","expiry_year","cvc","onCaptureCheckout","push","renderCheckoutForm","Object","keys","map","index","method","description","price","formatted_with_code","renderCheckoutSummary","lineItem","media","source","quantity","line_total","formatted_with_symbol","subtotal","render","withRouter","propTypes","history","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport commerce from '../lib/commerce';\r\nimport { AppContext } from '../context/state';\r\nimport Router from 'next/router'\r\n\r\nclass Checkout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            checkoutToken: {},\r\n            // Customer details\r\n            firstName: 'Jane',\r\n            lastName: 'Doe',\r\n            email: 'janedoe@email.com',\r\n            // Shipping details\r\n            shippingName: 'Jane Doe',\r\n            shippingStreet: '123 Fake St',\r\n            shippingCity: '',\r\n            shippingStateProvince: '',\r\n            shippingPostalZipCode: '',\r\n            shippingCountry: '',\r\n            // Payment details\r\n            cardNum: '4242 4242 4242 4242',\r\n            expMonth: '11',\r\n            expYear: '2023',\r\n            ccv: '123',\r\n            billingPostalZipcode: '',\r\n            // Shipping and fulfillment data\r\n            shippingCountries: {},\r\n            shippingSubdivisions: {},\r\n            shippingOptions: [],\r\n            shippingOption: '',\r\n        }\r\n\r\n        this.handleFormChanges = this.handleFormChanges.bind(this);\r\n        this.handleShippingCountryChange = this.handleShippingCountryChange.bind(this);\r\n        this.handleSubdivisionChange = this.handleSubdivisionChange.bind(this);\r\n        this.handleCaptureCheckout = this.handleCaptureCheckout.bind(this);\r\n    };\r\n    static contextType = AppContext;\r\n    componentDidMount() {\r\n        this.generateCheckoutToken();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.shippingCountry !== prevState.shippingCountry) {\r\n            this.fetchShippingOptions(this.state.checkoutToken.id, this.state.shippingCountry);\r\n        }\r\n    };\r\n\r\n    /**\r\n     *  Generates a checkout token\r\n     *  https://commercejs.com/docs/sdk/checkout#generate-token\r\n     */\r\n    generateCheckoutToken() {\r\n        const { cart } = this.context;\r\n        if (cart.line_items.length) {\r\n            return commerce.checkout.generateToken(cart.id, { type: 'cart' })\r\n                .then((token) => this.setState({ checkoutToken: token }))\r\n                .then(() => this.fetchShippingCountries(this.state.checkoutToken.id))\r\n                .catch((error) => {\r\n                    console.log('There was an error in generating a token', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Fetches a list of countries available to ship to checkout token\r\n     * https://commercejs.com/docs/sdk/checkout#list-available-shipping-countries\r\n     *\r\n     * @param {string} checkoutTokenId\r\n     */\r\n    fetchShippingCountries(checkoutTokenId) {\r\n        commerce.services.localeListShippingCountries(checkoutTokenId).then((countries) => {\r\n            this.setState({\r\n                shippingCountries: countries.countries,\r\n            })\r\n        }).catch((error) => {\r\n            console.log('There was an error fetching a list of shipping countries', error);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Fetches the subdivisions (provinces/states) for a country\r\n     * https://commercejs.com/docs/sdk/checkout#list-all-subdivisions-for-a-country\r\n     *\r\n     * @param {string} countryCode\r\n     */\r\n    fetchSubdivisions(countryCode) {\r\n        commerce.services.localeListSubdivisions(countryCode).then((subdivisions) => {\r\n            this.setState({\r\n                shippingSubdivisions: subdivisions.subdivisions,\r\n            })\r\n        }).catch((error) => {\r\n            console.log('There was an error fetching the subdivisions', error);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Fetches the available shipping methods for the current checkout\r\n     * https://commercejs.com/docs/sdk/checkout#get-shipping-methods\r\n     *\r\n     * @param {string} checkoutTokenId\r\n     * @param {string} country\r\n     * @param {string} stateProvince\r\n     */\r\n    fetchShippingOptions(checkoutTokenId, country, stateProvince = null) {\r\n        commerce.checkout.getShippingOptions(checkoutTokenId,\r\n            {\r\n                country: country,\r\n                region: stateProvince\r\n            }).then((options) => {\r\n                // Pre-select the first available method\r\n                const shippingOption = options[0] || null;\r\n                this.setState({\r\n                    shippingOption: shippingOption,\r\n                    shippingOptions: options\r\n                })\r\n            }).catch((error) => {\r\n                console.log('There was an error fetching the shipping methods', error);\r\n            });\r\n    };\r\n\r\n    handleFormChanges(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    handleShippingCountryChange(e) {\r\n        const currentValue = e.target.value;\r\n        this.fetchSubdivisions(currentValue);\r\n    };\r\n\r\n    handleSubdivisionChange(e) {\r\n        const currentValue = e.target.value;\r\n        this.fetchShippingOptions(this.state.checkoutToken.id, this.state.shippingCountry, currentValue)\r\n    }\r\n\r\n    handleCaptureCheckout(e) {\r\n        e.preventDefault();\r\n\r\n        const orderData = {\r\n            line_items: this.state.checkoutToken.live.line_items,\r\n            customer: {\r\n                firstname: this.state.firstName,\r\n                lastname: this.state.lastName,\r\n                email: this.state.email\r\n            },\r\n            shipping: {\r\n                name: this.state.shippingName,\r\n                street: this.state.shippingStreet,\r\n                town_city: this.state.shippingCity,\r\n                county_state: this.state.shippingStateProvince,\r\n                postal_zip_code: this.state.shippingPostalZipCode,\r\n                country: this.state.shippingCountry,\r\n            },\r\n            fulfillment: {\r\n                shipping_method: this.state.shippingOption.id\r\n            },\r\n            payment: {\r\n                gateway: \"test_gateway\",\r\n                card: {\r\n                    number: this.state.cardNum,\r\n                    expiry_month: this.state.expMonth,\r\n                    expiry_year: this.state.expYear,\r\n                    cvc: this.state.ccv,\r\n                    postal_zip_code: this.state.billingPostalZipcode\r\n                }\r\n            }\r\n        };\r\n        this.props.onCaptureCheckout(this.state.checkoutToken.id, orderData);\r\n        Router.push('/confirmation');\r\n    };\r\n\r\n    renderCheckoutForm() {\r\n        const { shippingCountries, shippingSubdivisions, shippingOptions } = this.state;\r\n\r\n        return (\r\n            <form className=\"checkout__form\" onChange={this.handleFormChanges}>\r\n                <h4 className=\"checkout__subheading\">Customer information</h4>\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"firstName\">First name</label>\r\n                <input className=\"checkout__input\" type=\"text\" onChange={this.handleFormChanges} value={this.state.firstName} name=\"firstName\" placeholder=\"Enter your first name\" required />\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"lastName\">Last name</label>\r\n                <input className=\"checkout__input\" type=\"text\" onChange={this.handleFormChanges} value={this.state.lastName} name=\"lastName\" placeholder=\"Enter your last name\" required />\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"email\">Email</label>\r\n                <input className=\"checkout__input\" type=\"text\" onChange={this.handleFormChanges} value={this.state.email} name=\"email\" placeholder=\"Enter your email\" required />\r\n\r\n                <h4 className=\"checkout__subheading\">Shipping details</h4>\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"shippingName\">Full name</label>\r\n                <input className=\"checkout__input\" type=\"text\" onChange={this.handleFormChanges} value={this.state.shippingName} name=\"shippingName\" placeholder=\"Enter your shipping full name\" required />\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"shippingStreet\">Street address</label>\r\n                <input className=\"checkout__input\" type=\"text\" onChange={this.handleFormChanges} value={this.state.shippingStreet} name=\"shippingStreet\" placeholder=\"Enter your street address\" required />\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"shippingCity\">City</label>\r\n                <input className=\"checkout__input\" type=\"text\" onChange={this.handleFormChanges} value={this.state.shippingCity} name=\"shippingCity\" placeholder=\"Enter your city\" required />\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"shippingPostalZipCode\">Postal/Zip code</label>\r\n                <input className=\"checkout__input\" type=\"text\" onChange={this.handleFormChanges} value={this.state.shippingPostalZipCode} name=\"shippingPostalZipCode\" placeholder=\"Enter your postal/zip code\" required />\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"shippingCountry\">Country</label>\r\n                <select\r\n                    value={this.state.shippingCountry}\r\n                    name=\"shippingCountry\"\r\n                    onChange={this.handleShippingCountryChange}\r\n                    className=\"checkout__select\"\r\n                >\r\n                    <option disabled>Country</option>\r\n                    {\r\n                        Object.keys(shippingCountries).map((index) => {\r\n                            return (\r\n                                <option value={index} key={index}>{shippingCountries[index]}</option>\r\n                            );\r\n                        })\r\n                    };\r\n                </select>\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"shippingStateProvince\">State/province</label>\r\n                <select\r\n                    value={this.state.shippingStateProvince}\r\n                    name=\"shippingStateProvince\"\r\n                    onChange={this.handleSubdivisionChange}\r\n                    className=\"checkout__select\"\r\n                >\r\n                    <option className=\"checkout__option\" disabled>State/province</option>\r\n                    {\r\n                        Object.keys(shippingSubdivisions).map((index) => {\r\n                            return (\r\n                                <option value={index} key={index}>{shippingSubdivisions[index]}</option>\r\n                            );\r\n                        })\r\n                    };\r\n\r\n                </select>\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"shippingOption\">Shipping method</label>\r\n                <select\r\n                    value={this.state.shippingOption.id}\r\n                    name=\"shippingOption\"\r\n                    onChange={this.handleFormChanges}\r\n                    className=\"checkout__select\"\r\n                >\r\n                    <option className=\"checkout__select-option\" disabled>Select a shipping method</option>\r\n                    {\r\n                        shippingOptions.map((method, index) => {\r\n                            return (\r\n                                <option className=\"checkout__select-option\" value={method.id} key={index}>{`${method.description} - $${method.price.formatted_with_code}`}</option>\r\n                            );\r\n                        })\r\n                    };\r\n                </select>\r\n\r\n                <h4 className=\"checkout__subheading\">Payment information</h4>\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"cardNum\">Credit card number</label>\r\n                <input className=\"checkout__input\" type=\"text\" name=\"cardNum\" onChange={this.handleFormChanges} value={this.state.cardNum} placeholder=\"Enter your card number\" />\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"expMonth\">Expiry month</label>\r\n                <input className=\"checkout__input\" type=\"text\" name=\"expMonth\" onChange={this.handleFormChanges} value={this.state.expMonth} placeholder=\"Card expiry month\" />\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"expYear\">Expiry year</label>\r\n                <input className=\"checkout__input\" type=\"text\" name=\"expYear\" onChange={this.handleFormChanges} value={this.state.expYear} placeholder=\"Card expiry year\" />\r\n\r\n                <label className=\"checkout__label\" htmlFor=\"ccv\">CCV</label>\r\n                <input className=\"checkout__input\" type=\"text\" name=\"ccv\" onChange={this.handleFormChanges} value={this.state.ccv} placeholder=\"CCV (3 digits)\" />\r\n\r\n                <button onClick={this.handleCaptureCheckout} className=\"checkout__btn-confirm\">Confirm order</button>\r\n            </form>\r\n        );\r\n    };\r\n\r\n    renderCheckoutSummary() {\r\n        const { cart } = this.context;\r\n\r\n        return (\r\n            <>\r\n                <div className=\"checkout__summary\">\r\n                    <h4>Order summary</h4>\r\n                    {cart.line_items.map((lineItem) => (\r\n                        <>\r\n                            <div key={lineItem.id} className=\"checkout__summary-details\">\r\n                                <img className=\"checkout__summary-img\" src={lineItem.media.source} alt={lineItem.name} />\r\n                                <p className=\"checkout__summary-name\">{lineItem.quantity} x {lineItem.name}</p>\r\n                                <p className=\"checkout__summary-value\">{lineItem.line_total.formatted_with_symbol}</p>\r\n                            </div>\r\n                        </>\r\n                    ))}\r\n                    <div className=\"checkout__summary-total\">\r\n                        <p className=\"checkout__summary-price\">\r\n                            <span>Subtotal:</span>\r\n                            {cart.subtotal.formatted_with_symbol}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"checkout\">\r\n                <h2 className=\"checkout__heading\">\r\n                    Checkout\r\n                </h2>\r\n                <div className=\"checkout__wrapper\">\r\n                    {this.renderCheckoutForm()}\r\n                    {this.renderCheckoutSummary()}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default withRouter(Checkout);\r\n\r\nCheckout.propTypes = {\r\n    history: PropTypes.object,\r\n    onCaptureCheckout: () => { },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}