{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KGM\\\\OneDrive\\\\Documents\\\\GitHub\\\\chec\\\\fyp\\\\context\\\\state.js\";\nvar __jsx = React.createElement;\nimport { createContext } from 'react';\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nexport const AppContext = /*#__PURE__*/createContext();\nconst cartAPI = axios.create({\n  baseURL: process.env.CARTMSURL,\n  timeout: 3000,\n  headers: {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nconst productAPI = axios.create({\n  baseURL: process.env.PRODUCTSMSURL,\n  timeout: 3000,\n  headers: {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nconst ordermanagementAPI = axios.create({\n  baseURL: process.env.ORDERMANAGEMENTMSURL,\n  timeout: 3000,\n  headers: {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nclass AppWrapper extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cartID: \"\",\n      order: {},\n      cart: {},\n      isCartVisible: false,\n      products: [],\n      checkoutToken: \"\",\n      loadOrderFromLocalStorage: this.loadOrderFromLocalStorage.bind(this),\n      toggleCart: this.toggleCart.bind(this),\n      handleAddToCart: this.handleAddToCart.bind(this),\n      handleUpdateCartQty: this.handleUpdateCartQty.bind(this),\n      handleRemoveFromCart: this.handleRemoveFromCart.bind(this),\n      handleEmptyCart: this.handleEmptyCart.bind(this),\n      fetchCart: this.fetchCart.bind(this),\n      refreshCart: this.refreshCart.bind(this),\n      handleCaptureCheckout: this.handleCaptureCheckout.bind(this),\n      fetchProducts: this.fetchProducts.bind(this),\n      generateToken: this.generateToken.bind(this)\n    };\n  }\n  /**\r\n   * Fetch products data from Chec and stores in the products data object.\r\n   * https://commercejs.com/docs/sdk/products\r\n   */\n\n\n  async fetchProducts() {\n    productAPI.get(\"/get\").then(products => {\n      this.setState({\n        products: products.data.data\n      });\n    }).catch(error => {\n      console.log('There was an error fetching the products', error);\n    });\n  }\n\n  async fetchCart() {\n    const cartID = Cookies.get('cartID');\n\n    if (await this.retrieveCart(cartID)) {\n      console.log(\"Cart Retrieved!\");\n    } else if (await this.createCart()) {\n      console.log(\"Cart Created!\");\n    } else {\n      console.error(\"An error occured while fetching the cart.\");\n    }\n  } //Actions\n\n  /**\r\n   * Fetch a saved order receipt from local storage so we can show the confirmation page\r\n   * again between page refreshes.\r\n   */\n\n\n  loadOrderFromLocalStorage() {\n    if (window.localStorage.getItem('order_receipt')) {\n      this.setState({\n        order: JSON.parse(window.localStorage.getItem('order_receipt'))\n      });\n    }\n  }\n  /**\r\n   * Show hide cart in nav\r\n   */\n\n\n  toggleCart() {\n    const {\n      isCartVisible\n    } = this.state;\n    this.setState({\n      isCartVisible: !isCartVisible\n    });\n  } //-> start of cart functions\n\n  /**\r\n   * Adds a product to the current cart in session\r\n   * https://commercejs.com/docs/sdk/cart/#add-to-cart\r\n   *\r\n   * @param {string} productId The ID of the product being added\r\n   * @param {number} quantity The quantity of the product being added\r\n   */\n\n\n  async handleAddToCart(productId, quantity) {\n    await cartAPI.post(\"/addto\", {\n      cartID: this.state.cartID,\n      productId: productId,\n      quantity: quantity\n    }).then(item => {\n      this.setState({\n        cart: item.data.cart\n      });\n    }).catch(error => {\n      console.log('There was an adding a cart item', error);\n    });\n  }\n  /**\r\n   * Updates line_items in cart\r\n   * https://commercejs.com/docs/sdk/cart/#update-cart\r\n   *\r\n   * @param {string} lineItemId ID of the cart line item being updated\r\n   * @param {number} quantity New line item quantity to update\r\n   */\n\n\n  handleUpdateCartQty(lineItemId, quantity) {\n    cartAPI.put(\"/updateqty\", {\n      cartID: this.state.cartID,\n      lineItemId: lineItemId,\n      quantity: quantity\n    }).then(resp => {\n      this.setState({\n        cart: resp.data.cart\n      });\n    }).catch(error => {\n      console.log('There was an error updating the cart items', error);\n    });\n  }\n  /**\r\n   * Removes line item from cart\r\n   * https://commercejs.com/docs/sdk/cart/#remove-from-cart\r\n   *\r\n   * @param {string} lineItemId ID of the line item being removed\r\n   */\n\n\n  handleRemoveFromCart(lineItemId) {\n    cartAPI.delete(\"/removefrom/\" + this.state.cartID + \"/\" + lineItemId).then(resp => {\n      this.setState({\n        cart: resp.data.cart\n      });\n    }).catch(error => {\n      console.error('There was an error removing the item from the cart', error);\n    });\n  }\n  /**\r\n   * Empties cart contents\r\n   * https://commercejs.com/docs/sdk/cart/#remove-from-cart\r\n   */\n\n\n  async handleEmptyCart() {\n    await cartAPI.delete(\"/empty/\" + this.state.cartID).then(resp => {\n      this.setState({\n        cart: resp.data.cart\n      });\n    }).catch(error => {\n      console.error('There was an error emptying the cart', error);\n    });\n  }\n  /**\r\n  * Creates a cart\r\n  * https://commercejs.com/docs/sdk/cart\r\n  */\n\n\n  async createCart() {\n    return await cartAPI.get(\"/create\").then(cart => {\n      this.setState({\n        cart: cart.data,\n        cartID: cart.data.id\n      });\n      Cookies.set('cartID', cart.data.id);\n      return true;\n    }).catch(error => {\n      console.error(error);\n      return false;\n    });\n  }\n\n  async retrieveCart(cartID) {\n    return await cartAPI.get(\"/fetch/\" + cartID).then(cart => {\n      this.setState({\n        cart: cart.data,\n        cartID: cart.data.id\n      });\n      return true;\n    }).catch(error => {\n      console.error(error);\n      return false;\n    });\n  }\n  /**\r\n   * Refreshes to a new cart\r\n   * https://commercejs.com/docs/sdk/cart#refresh-cart\r\n   */\n\n\n  refreshCart() {\n    this.createCart();\n  } //=> end fo cart functions\n\n  /**\r\n   * Captures the checkout\r\n   * https://commercejs.com/docs/sdk/checkout#capture-order\r\n   *\r\n   * @param {string} checkoutTokenId The ID of the checkout token\r\n   * @param {object} newOrder The new order object data\r\n   */\n\n\n  handleCaptureCheckout(checkoutTokenId, newOrder) {\n    ordermanagementAPI.post(\"/checkout/create\");\n    commerce.checkout.capture(checkoutTokenId, newOrder).then(order => {\n      this.setState({\n        order: order\n      }); // Store the order in session storage so we can show it again\n      // if the user refreshes the page!\n\n      window.localStorage.setItem('order_receipt', JSON.stringify(order)); // Clears the cart\n\n      this.refreshCart(); // Send the user to the receipt\n\n      this.props.history.push('/confirmation');\n    }).catch(error => {\n      console.log('There was an error confirming your order', error);\n    });\n  }\n  /**\r\n     *  Generates a checkout token\r\n     *  https://commercejs.com/docs/sdk/checkout#generate-token\r\n     */\n\n\n  generateCheckoutToken() {\n    if (cart.line_items.length) {\n      ordermanagementAPI.get(\"/checkout/generate/token\", {\n        cartID: this.context.cart.id\n      }).then(token => {\n        this.setState({\n          checkoutToken: token\n        });\n      }).catch(error => {\n        console.log('There was an error in generating a token', error);\n      });\n    }\n\n    const {\n      cart\n    } = this.context;\n\n    if (cart.line_items.length) {\n      return commerce.checkout.generateToken(cart.id, {\n        type: 'cart'\n      }).then(token => this.setState({\n        checkoutToken: token\n      })).then(() => this.fetchShippingCountries(this.state.checkoutToken.id)).catch(error => {\n        console.log('There was an error in generating a token', error);\n      });\n    }\n  }\n\n  render() {\n    return __jsx(AppContext.Provider, {\n      value: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport { AppWrapper };\nexport function useAppContext() {\n  return useContext(AppContext);\n}","map":{"version":3,"sources":["C:/Users/KGM/OneDrive/Documents/GitHub/chec/fyp/context/state.js"],"names":["createContext","React","Component","axios","Cookies","AppContext","cartAPI","create","baseURL","process","env","CARTMSURL","timeout","headers","productAPI","PRODUCTSMSURL","ordermanagementAPI","ORDERMANAGEMENTMSURL","AppWrapper","constructor","state","cartID","order","cart","isCartVisible","products","checkoutToken","loadOrderFromLocalStorage","bind","toggleCart","handleAddToCart","handleUpdateCartQty","handleRemoveFromCart","handleEmptyCart","fetchCart","refreshCart","handleCaptureCheckout","fetchProducts","generateToken","get","then","setState","data","catch","error","console","log","retrieveCart","createCart","window","localStorage","getItem","JSON","parse","productId","quantity","post","item","lineItemId","put","resp","delete","id","set","checkoutTokenId","newOrder","commerce","checkout","capture","setItem","stringify","props","history","push","generateCheckoutToken","line_items","length","context","token","type","fetchShippingCountries","render","children","useAppContext","useContext"],"mappings":"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","sourcesContent":["import { createContext } from 'react';\r\nimport React, { Component } from \"react\"\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie'\r\n\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst cartAPI = axios.create({\r\n  baseURL: process.env.CARTMSURL,\r\n  timeout: 3000,\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  }\r\n});\r\n\r\nconst productAPI = axios.create({\r\n  baseURL: process.env.PRODUCTSMSURL,\r\n  timeout: 3000,\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  }\r\n});\r\n\r\nconst ordermanagementAPI = axios.create({\r\n  baseURL: process.env.ORDERMANAGEMENTMSURL,\r\n  timeout: 3000,\r\n  headers: {\r\n    \"Accept\": \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  }\r\n});\r\n\r\nclass AppWrapper extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      cartID: \"\",\r\n      order: {},\r\n      cart: {},\r\n      isCartVisible: false,\r\n      products: [],\r\n      checkoutToken: \"\",\r\n      loadOrderFromLocalStorage: this.loadOrderFromLocalStorage.bind(this),\r\n      toggleCart: this.toggleCart.bind(this),\r\n      handleAddToCart: this.handleAddToCart.bind(this),\r\n      handleUpdateCartQty: this.handleUpdateCartQty.bind(this),\r\n      handleRemoveFromCart: this.handleRemoveFromCart.bind(this),\r\n      handleEmptyCart: this.handleEmptyCart.bind(this),\r\n      fetchCart: this.fetchCart.bind(this),\r\n      refreshCart: this.refreshCart.bind(this),\r\n      handleCaptureCheckout: this.handleCaptureCheckout.bind(this),\r\n      fetchProducts: this.fetchProducts.bind(this),\r\n      generateToken: this.generateToken.bind(this)\r\n    };\r\n\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Fetch products data from Chec and stores in the products data object.\r\n   * https://commercejs.com/docs/sdk/products\r\n   */\r\n  async fetchProducts() {\r\n    productAPI.get(\"/get\").then((products) => {\r\n      this.setState({ products: products.data.data });\r\n    }).catch((error) => {\r\n      console.log('There was an error fetching the products', error);\r\n    });\r\n  }\r\n\r\n  async fetchCart() {\r\n    const cartID = Cookies.get('cartID');\r\n\r\n    if (await this.retrieveCart(cartID)) {\r\n      console.log(\"Cart Retrieved!\");\r\n    } else if (await this.createCart()) {\r\n      console.log(\"Cart Created!\")\r\n    } else {\r\n      console.error(\"An error occured while fetching the cart.\")\r\n    }\r\n  }\r\n\r\n  //Actions\r\n\r\n  /**\r\n   * Fetch a saved order receipt from local storage so we can show the confirmation page\r\n   * again between page refreshes.\r\n   */\r\n  loadOrderFromLocalStorage() {\r\n    if (window.localStorage.getItem('order_receipt')) {\r\n      this.setState({ order: JSON.parse(window.localStorage.getItem('order_receipt')) })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show hide cart in nav\r\n   */\r\n  toggleCart() {\r\n    const { isCartVisible } = this.state;\r\n    this.setState({\r\n      isCartVisible: !isCartVisible,\r\n    });\r\n  }\r\n\r\n  //-> start of cart functions\r\n  /**\r\n   * Adds a product to the current cart in session\r\n   * https://commercejs.com/docs/sdk/cart/#add-to-cart\r\n   *\r\n   * @param {string} productId The ID of the product being added\r\n   * @param {number} quantity The quantity of the product being added\r\n   */\r\n  async handleAddToCart(productId, quantity) {\r\n\r\n    await cartAPI.post(\"/addto\", { cartID: this.state.cartID, productId: productId, quantity: quantity }).then((item) => {\r\n      this.setState({ cart: item.data.cart });\r\n    }).catch((error) => {\r\n      console.log('There was an adding a cart item', error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates line_items in cart\r\n   * https://commercejs.com/docs/sdk/cart/#update-cart\r\n   *\r\n   * @param {string} lineItemId ID of the cart line item being updated\r\n   * @param {number} quantity New line item quantity to update\r\n   */\r\n  handleUpdateCartQty(lineItemId, quantity) {\r\n    cartAPI.put(\"/updateqty\", { cartID: this.state.cartID, lineItemId: lineItemId, quantity: quantity }).then((resp) => {\r\n      this.setState({ cart: resp.data.cart })\r\n    }).catch((error) => {\r\n      console.log('There was an error updating the cart items', error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Removes line item from cart\r\n   * https://commercejs.com/docs/sdk/cart/#remove-from-cart\r\n   *\r\n   * @param {string} lineItemId ID of the line item being removed\r\n   */\r\n  handleRemoveFromCart(lineItemId) {\r\n    cartAPI.delete(\"/removefrom/\" + this.state.cartID + \"/\" + lineItemId).then((resp) => {\r\n      this.setState({ cart: resp.data.cart })\r\n    }).catch((error) => {\r\n      console.error('There was an error removing the item from the cart', error);\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Empties cart contents\r\n   * https://commercejs.com/docs/sdk/cart/#remove-from-cart\r\n   */\r\n  async handleEmptyCart() {\r\n    await cartAPI.delete(\"/empty/\" + this.state.cartID).then((resp) => {\r\n      this.setState({ cart: resp.data.cart })\r\n    }).catch((error) => {\r\n      console.error('There was an error emptying the cart', error);\r\n    });\r\n  }\r\n\r\n  /**\r\n  * Creates a cart\r\n  * https://commercejs.com/docs/sdk/cart\r\n  */\r\n  async createCart() {\r\n\r\n    return await cartAPI.get(\"/create\").then((cart) => {\r\n      this.setState({ cart: cart.data, cartID: cart.data.id });\r\n      Cookies.set('cartID', cart.data.id);\r\n      return true;\r\n    }\r\n    ).catch((error) => {\r\n      console.error(error)\r\n      return false;\r\n    }\r\n    );\r\n  }\r\n\r\n  async retrieveCart(cartID) {\r\n    return await cartAPI.get(\"/fetch/\" + cartID).then((cart) => {\r\n      this.setState({ cart: cart.data, cartID: cart.data.id });\r\n      return true;\r\n    }\r\n    ).catch((error) => {\r\n      console.error(error)\r\n      return false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Refreshes to a new cart\r\n   * https://commercejs.com/docs/sdk/cart#refresh-cart\r\n   */\r\n  refreshCart() {\r\n    this.createCart();\r\n  }\r\n  //=> end fo cart functions\r\n\r\n  /**\r\n   * Captures the checkout\r\n   * https://commercejs.com/docs/sdk/checkout#capture-order\r\n   *\r\n   * @param {string} checkoutTokenId The ID of the checkout token\r\n   * @param {object} newOrder The new order object data\r\n   */\r\n  handleCaptureCheckout(checkoutTokenId, newOrder) {\r\n\r\n    ordermanagementAPI.post(\"/checkout/create\",)\r\n    commerce.checkout.capture(checkoutTokenId, newOrder).then((order) => {\r\n\r\n      this.setState({\r\n        order: order,\r\n      });\r\n\r\n      // Store the order in session storage so we can show it again\r\n      // if the user refreshes the page!\r\n      window.localStorage.setItem('order_receipt', JSON.stringify(order));\r\n      // Clears the cart\r\n      this.refreshCart();\r\n      // Send the user to the receipt\r\n      this.props.history.push('/confirmation');\r\n    }).catch((error) => {\r\n      console.log('There was an error confirming your order', error);\r\n    });\r\n  }\r\n\r\n  /**\r\n     *  Generates a checkout token\r\n     *  https://commercejs.com/docs/sdk/checkout#generate-token\r\n     */\r\n  generateCheckoutToken() {\r\n    if (cart.line_items.length) {\r\n\r\n      ordermanagementAPI.get(\"/checkout/generate/token\", { cartID: this.context.cart.id }).then(token => {\r\n        this.setState({ checkoutToken: token });\r\n      }).catch(error => {\r\n        console.log('There was an error in generating a token', error);\r\n      });\r\n    }\r\n\r\n    const { cart } = this.context;\r\n    if (cart.line_items.length) {\r\n      return commerce.checkout.generateToken(cart.id, { type: 'cart' })\r\n        .then((token) => this.setState({ checkoutToken: token }))\r\n        .then(() => this.fetchShippingCountries(this.state.checkoutToken.id))\r\n        .catch((error) => {\r\n          console.log('There was an error in generating a token', error);\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport { AppWrapper };\r\n\r\nexport function useAppContext() {\r\n  return useContext(AppContext);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}